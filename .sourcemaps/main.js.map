{"version":3,"sources":["../../src/components/components.module.ts","../../src/scheduling/organization.ts","../../node_modules/@angular/core/esm5 lazy","../../src/app/app.module.ts","../../src lazy","../../src/pages/home/home.module.ts","../../src/app/logging-configuration.ts","../../src/scheduling/common/date-utils.ts","../../src/scheduling/tests/scheduling-types.ts","../../src/components/reasons/reasons.ts","../../src/store/UIState.ts","../../src/providers/store/test.store.ts","../../src/scheduling/people.ts","../../src/pages/home/home.ts","../../src/pages/sheet-selection/sheet-selection.ts","../../src/pages/tab-selection/tab-selection.ts","../../src/pages/login/login.module.ts","../../src/pages/sheet-selection/sheet-selection.module.ts","../../src/pages/tab-selection/tab-selection.module.ts","../../src/store/root.ts","../../src/pages/about/about.ts","../../src/pages/people/people.ts","../../src/app/main.ts","../../src/components/schedule-viewer/schedule-viewer.ts","../../node_modules/moment/locale ^/.//.*$","../../src/scheduling/unavailability.ts","../../src/scheduling/rule_based/rule-facts.ts","../../src/components/person-editor/person-editor.ts","../../src/scheduling/tests/roles.ts","../../src/common/logging-wrapper.ts","../../src/components/show-form-errors/show-form-errors.ts","../../src/scheduling/exporter/csv.exporter.ts","../../src/common/auth-common.ts","../../src/common/interfaces.ts","../../src/common/spreadsheet_reader.ts","../../src/pages/login/login.ts","../../src/app/app.component.ts","../../src/pages/tabs/tabs.ts","../../src/scheduling/rule_based/rules.ts","../../src/scheduling/common.ts","../../src/scheduling/common/base_model.ts","../../src/scheduling/rule_based/scheduler.ts","../../src/common/gapis-auth.ts","../../src/providers/server/server.ts"],"names":[],"mappings":"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AAC;gBACxB,MAAM,CAAC,SAAS,CAAC;YACrB,CAAC;YACD,MAAM,CAAC,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC;QACrC,CAAC;;;OAAA;IAtHD;QADC,oEAAK,EAAE;kCACC,2FAAiB;6DAAC;IAQ3B;QADC,sDAAQ;kCACM,KAAK;;0DAKnB;IAGD;QADC,sDAAQ;kCACG,KAAK;;uDAMhB;IAoFD;QADC,sDAAQ;kCACc,kEAAM;;kEAK5B;IAjHQ,uBAAuB;QALnC,wEAAS,CAAC;YACP,mDAAmD;YACnD,QAAQ,EAAE,iBAAiB;WACQ;SACtC,CAAC;kFAKsC;YACR,wEAAc;YACV,iBAAiB;OANxC,uBAAuB,CAyHnC;IAAD,CAAC;AAAA;SAzHY,uBAAuB,W;;;;;;;ACdpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wB;;;;;;;;;;;;;;;;;;;;;;;ACtQmD;AACG;AAE/B;AAEU;AAEjC;IAA4B,iCAAc;IAKtC,uBAAY,IAAU,EAAE,EAAe,EAAE,MAAa;QAA9B,8BAAe;QAAE,sCAAa;QAAtD,YACI,iBAAO,SAOV;QAZD,eAAS,GAAS,IAAI,CAAC;QACvB,aAAO,GAAS,IAAI,CAAC;QACrB,YAAM,GAAW,IAAI,CAAC;QAIlB,EAAE,CAAC,CAAC,IAAI,IAAI,IAAI,CAAC,CAAC,CAAC;YACf,MAAM,IAAI,KAAK,CAAC,0BAA0B,CAAC,CAAC;QAChD,CAAC;QACD,KAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QACtB,KAAI,CAAC,OAAO,GAAG,EAAE,CAAC;QAClB,KAAI,CAAC,MAAM,GAAG,MAAM,CAAC;;IACzB,CAAC;IAED,sBAAI,wCAAa;aAAjB;YACI,MAAM,CAAC,IAAI,CAAC,SAAS,IAAI,IAAI,IAAI,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC;QAC1D,CAAC;;;OAAA;IAED,2CAAmB,GAAnB,UAAoB,CAAO;QACvB,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,CAAC,CAAC;YACvB,MAA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","file":"main.js","sourcesContent":["import {NgModule} from '@angular/core';\nimport {ScheduleViewerComponent} from './schedule-viewer/schedule-viewer';\nimport {IonicModule} from \"ionic-angular\";\nimport {NgPipesModule} from \"angular-pipes\";\nimport {PersonEditorComponent} from './person-editor/person-editor';\nimport {ReasonsComponent} from './reasons/reasons';\nimport {ShowFormErrorsComponent} from \"./show-form-errors/show-form-errors\";\n\n@NgModule({\n    declarations: [\n        ScheduleViewerComponent,\n        PersonEditorComponent,\n        ShowFormErrorsComponent,\n        ReasonsComponent,\n    ],\n    imports: [\n        IonicModule,\n        NgPipesModule,\n    ],\n    exports: [\n        ScheduleViewerComponent,\n        PersonEditorComponent,\n        ReasonsComponent,\n        ShowFormErrorsComponent\n    ]\n})\nexport class ComponentsModule {\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/components.module.ts","import {BaseStore, ObjectWithUUID} from \"./common/base_model\";\nimport {action, observable} from \"mobx\";\n\nclass Organization extends ObjectWithUUID {\n    @observable name: string;\n\n    constructor(name: string) {\n        super();\n        this.name = name;\n    }\n}\n\nclass OrganizationStore extends BaseStore<Organization> {\n    constructor() {\n        super();\n    }\n\n    @action addOrganizaton(org: Organization) {\n        this.add_object_to_array(org);\n    }\n\n    @action removeOrganization(org:Organization) {\n        this.remove_object_from_array(org);\n    }\n}\n\nexport {\n    Organization,\n    OrganizationStore\n}\n\n\n// WEBPACK FOOTER //\n// ./src/scheduling/organization.ts","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 155;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@angular/core/esm5 lazy\n// module id = 155\n// module chunks = 0","import {APP_INITIALIZER, ErrorHandler, Injector, NgModule} from '@angular/core';\nimport {BrowserModule} from '@angular/platform-browser';\nimport {IonicApp, IonicErrorHandler, IonicModule} from 'ionic-angular';\nimport {MyApp} from './app.component';\n\nimport {AboutPage} from '../pages/about/about';\nimport {TabsPage} from '../pages/tabs/tabs';\nimport {PeoplePage} from \"../pages/people/people\";\n\nimport {StatusBar} from '@ionic-native/status-bar';\nimport {SplashScreen} from '@ionic-native/splash-screen';\nimport {ComponentsModule} from \"../components/components.module\";\nimport {NgPipesModule} from \"angular-pipes\";\nimport {ApolloModule} from \"apollo-angular\";\nimport {HttpLinkModule} from \"apollo-angular-link-http\";\nimport {HttpClientModule} from \"@angular/common/http\";\nimport {IonicStorageModule} from \"@ionic/storage\";\nimport {GAPIS} from \"../common/gapis-auth\";\nimport {SheetSelectionPageModule} from \"../pages/sheet-selection/sheet-selection.module\";\nimport {TabSelectionPageModule} from \"../pages/tab-selection/tab-selection.module\";\nimport {ConfigurationService} from \"ionic-configuration-service\";\nimport {LoggingService} from \"ionic-logging-service\";\nimport {loadConfiguration} from \"./logging-configuration\";\nimport {ServerProvider} from \"../providers/server/server\";\nimport {HomePageModule} from \"../pages/home/home.module\";\nimport {LoginPageModule} from \"../pages/login/login.module\";\nimport {RootStore} from \"../store/root\";\n\n// export function defaultDSPSetup(apollo, link) {\n//     return new DataStoreProvider(apollo, link, defaultConfiguration);\n// }\n\n@NgModule({\n    declarations: [\n        MyApp,\n        AboutPage,\n        PeoplePage,\n        TabsPage\n    ],\n    imports: [\n        HttpClientModule,\n        BrowserModule,\n        NgPipesModule,\n        IonicModule.forRoot(MyApp),\n        IonicStorageModule.forRoot(),\n        ComponentsModule,\n        ApolloModule,\n        HttpLinkModule,\n        SheetSelectionPageModule,\n        TabSelectionPageModule,\n        HomePageModule,\n        LoginPageModule\n\n    ],\n    bootstrap: [IonicApp],\n    entryComponents: [\n        MyApp,\n        AboutPage,\n        PeoplePage,\n        TabsPage,\n    ],\n    providers: [\n        StatusBar,\n        SplashScreen,\n        RootStore,\n        ConfigurationService,\n        {\n            provide: APP_INITIALIZER,\n            useFactory: loadConfiguration,\n            deps: [ConfigurationService],\n            multi: true\n        },\n        {provide: ErrorHandler, useClass: IonicErrorHandler},\n        // {\n        //     provide: DataStoreProvider,\n        //     useFactory: defaultDSPSetup,\n        //     deps: [Apollo, HttpLink]\n        // },\n        LoggingService,\n        GAPIS,\n        ServerProvider\n    ]\n})\n\nexport class AppModule {\n    static injector: Injector;\n\n    constructor(injector: Injector) {\n        AppModule.injector = injector;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","var map = {\n\t\"../pages/home/home.module\": [\n\t\t200\n\t],\n\t\"../pages/login/login.module\": [\n\t\t424\n\t],\n\t\"../pages/sheet-selection/sheet-selection.module\": [\n\t\t425\n\t],\n\t\"../pages/tab-selection/tab-selection.module\": [\n\t\t426\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids)\n\t\treturn Promise.reject(new Error(\"Cannot find module '\" + req + \"'.\"));\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(function() {\n\t\treturn __webpack_require__(ids[0]);\n\t});\n};\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 199;\nmodule.exports = webpackAsyncContext;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src lazy\n// module id = 199\n// module chunks = 0","import {NgModule} from '@angular/core';\nimport {IonicPageModule} from 'ionic-angular';\nimport {ComponentsModule} from \"../../components/components.module\";\nimport {HomePage} from \"./home\";\n\n@NgModule({\n    declarations: [\n        HomePage,\n    ],\n    imports: [\n        ComponentsModule,\n        IonicPageModule.forChild(HomePage),\n    ],\n})\nexport class HomePageModule {\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/home/home.module.ts","import {ConfigurationService} from \"ionic-configuration-service\";\n\nexport function loadConfiguration(configurationService: ConfigurationService): () => Promise<void> {\n    return () => configurationService.load(\"assets/settings.json\");\n}\n\n/*\nNote: had to completely override the class since it doesn't have a setter for the values, and it's private.\n */\nclass MockConfigurationService extends ConfigurationService {\n    private mocked_configValues: { [key: string]: any };\n\n    public getKeys(): string[] {\n        const keys: string[] = [];\n        // tslint:disable-next-line:forin\n        for (const key in this.mocked_configValues) {\n            keys.push(key);\n        }\n        return keys;\n    }\n\n    public getValue<T>(key: string): T {\n        if (this.mocked_configValues) {\n            return this.mocked_configValues[key];\n        } else {\n            return undefined;\n        }\n    }\n    public setVars(vars:any) {\n        this.mocked_configValues = vars;\n    }\n}\n\n\nexport {\n    MockConfigurationService\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/logging-configuration.ts","import * as moment from \"moment\";\nimport {Moment} from \"moment\";\n\nlet constructSensibleDate = (year: number, month: number, day: number) => {\n    return new Date(year, month - 1, day);\n};\n\nlet addDaysToDate = (date: Date, days: number): Date => {\n    let new_date = new Date(date);\n    new_date.setDate(date.getDate() + days);\n    return new_date;\n};\n\nlet isDateValid = (date: Date): boolean => {\n    return !isNaN(date.getTime());\n};\n\nlet throwOnInvalidDate = (date: Date, message: string = \"Date is not valid\") => {\n    if (!isDateValid(date)) {\n        throw new Error(message);\n    }\n};\n\nlet formatDateForGoogleSpreadsheet = (date: Date): string => {\n    return date.toDateString();\n};\n\nlet parseDateFromSpreadsheetDate = (date_as_string: string): Date => {\n    let moment_date = parseMomentDateFromSpreadsheetDate(date_as_string);\n    if (moment_date && moment_date.isValid()) {\n        return moment_date.toDate();\n    }\n    return null;\n};\n\nlet parseMomentDateFromSpreadsheetDate = (date_as_string: string): Moment => {\n    let moment_date = moment(date_as_string, \"ddd MMM DD YYYY\");\n    if (moment_date.isValid()) {\n        return moment_date;\n    }\n    return null;\n};\n\nlet dayAndHourForDate = (date: Date): string => {\n    if (date == null) {\n        return \"\";\n    }\n    return date.getFullYear() + \"/\" + date.getMonth() + \"/\" + date.getDate() + \"@\" + date.getHours();\n};\n\nlet csd = constructSensibleDate;\n\nexport {\n    constructSensibleDate,\n    addDaysToDate,\n    isDateValid,\n    throwOnInvalidDate,\n    formatDateForGoogleSpreadsheet,\n    dayAndHourForDate,\n    parseDateFromSpreadsheetDate,\n    parseMomentDateFromSpreadsheetDate,\n    csd\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/scheduling/common/date-utils.ts","import {observable} from \"mobx\";\nimport {Person} from \"../people\";\nimport {throwOnInvalidDate} from \"../common/date-utils\";\nimport {RuleFacts} from \"../rule_based/rule-facts\";\n\nexport enum AvailabilityUnit {\n    // Models availability such as \"every 4 weeks\".\n    // Use Availability\n    AVAIL_ANYTIME,\n    EVERY_N_DAYS,\n    EVERY_N_WEEKS,\n\n    // Models availability such as \"every 2 out of 3\"\n    // Use AvailabilityEveryNOfM\n    EVERY_N_OF_M_WEEKS,\n}\n\nexport class Availability {\n    period: number;\n    unit: AvailabilityUnit;\n\n    constructor(period: number = 1, unit: AvailabilityUnit = AvailabilityUnit.AVAIL_ANYTIME) {\n        this.period = period;\n        this.unit = unit;\n    }\n\n    get_end_date_from(date: Date) {\n        let end_date = new Date(date);\n        switch (this.unit) {\n            case AvailabilityUnit.AVAIL_ANYTIME:\n                end_date.setDate(date.getDate() + 1);\n                break;\n\n            case AvailabilityUnit.EVERY_N_DAYS:\n                end_date.setDate(date.getDate() + this.period - 1);\n                break;\n\n            case AvailabilityUnit.EVERY_N_WEEKS:\n                end_date.setDate(date.getDate() + (7 * this.period) - 1);\n                break;\n        }\n        return end_date;\n    }\n\n    every(a_number: number, unit: AvailabilityUnit) {\n        this.period = a_number;\n        this.unit = unit;\n    }\n\n    is_available(person: Person, date: Date, facts: RuleFacts, record_unavailability: boolean) {\n        return true;\n    }\n}\n\nexport class AvailabilityEveryNOfM extends Availability {\n    period_to_look_at: number;\n\n    constructor(every: number, of_weeks: number) {\n        super(every, AvailabilityUnit.EVERY_N_OF_M_WEEKS);\n        this.period_to_look_at = of_weeks;\n    }\n\n    // Always returns one week.\n    get_end_date_from(date: Date): Date {\n        let end_date = new Date(date);\n        end_date.setDate(date.getDate() + (7) - 1);\n        return end_date;\n    }\n\n    is_available(person: Person, date: Date, facts: RuleFacts, record_unavailability: boolean) {\n        // How many times have I done something .... in the last 'M' weeks?\n        throwOnInvalidDate(date);\n        let end_date = new Date(date);\n        let start_date = new Date(date);\n        start_date.setDate(date.getDate() - (this.period_to_look_at * 7) + 1);\n\n        if (record_unavailability) {\n            // facts.add_decision(\"Checking from \" + start_date.toDateString() + \" to \" + end_date.toDateString());\n        }\n\n        // Count the number of times this person has done something\n        let number_of_placements = facts.placements_for_person(person, start_date, end_date);\n        let num_placements = number_of_placements.length;\n        let is_available = num_placements < this.period;\n        if (record_unavailability) {\n            facts.add_decision(`Looking between ${start_date.toDateString()} and ${end_date.toDateString()}. Have ${num_placements} in those dates`);\n            let rule = `Rule is every ${this.period} of ${this.period_to_look_at}`;\n            if (is_available) {\n                facts.add_decision(` - Available. ${rule}. Would cause ${num_placements + 1} out of ${this.period_to_look_at}`);\n            } else {\n                facts.add_decision(` - Unavailable. ${rule}. Would cause ${num_placements + 1} out of ${this.period_to_look_at}`);\n            }\n        }\n        return is_available;\n    }\n}\n\nexport class SchedulePrefs {\n    @observable slip_aggressiveness: number;\n    @observable fill_aggresiveness: number;\n    @observable preferred_leader: Person;\n    @observable availability: Availability;\n\n    constructor() {\n        this.slip_aggressiveness = 0;\n        this.fill_aggresiveness = 0;\n        this.availability = new Availability();\n    }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/scheduling/tests/scheduling-types.ts","import {Component, Input} from '@angular/core';\n\n@Component({\n    selector: 'reasons',\n    templateUrl: 'reasons.html'\n})\nexport class ReasonsComponent {\n    @Input() decisions: Array<string>;\n\n    constructor() {\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/reasons/reasons.ts","import {action, computed, observable} from \"mobx\";\nimport {Role} from \"../scheduling/tests/roles\";\nimport {Person} from \"../scheduling/people\";\n\nclass SavedState {\n    @observable previous_sheet_id: string;\n    @observable previous_sheet_tab_id: number;\n\n    @observable google_sheet_id: string;\n    @observable google_sheet_tab_id: number;\n    @observable google_sheet_id_retrieved: boolean;\n\n    @observable login_token: string;\n\n    @computed\n    get have_previous_selection(): boolean {\n        return this.previous_sheet_id != null && this.previous_sheet_tab_id != 0;\n    }\n\n    @action\n    clear_previous_sheet_selection() {\n        this.previous_sheet_id = null;\n        this.previous_sheet_tab_id = 0;\n    }\n\n    @action\n    clear_all_sheet_state() {\n        this.google_sheet_id = \"\";\n        this.google_sheet_tab_id = 0;\n        this.google_sheet_id_retrieved = false;\n        this.clear_previous_sheet_selection();\n    }\n}\n\nclass UIStore {\n    /*\n    Transient state\n     */\n    @observable selected_person: Person;\n    @observable selected_date: Date;\n    @observable selected_role: Role;\n\n    @observable signed_in_to_google: boolean;\n    @observable login_token_validated: boolean;\n\n    /*\n    Saved state\n     */\n    @observable saved_state: SavedState;\n\n    constructor() {\n        this.login_token_validated = false;\n        this.signed_in_to_google = false;\n        this.saved_state = new SavedState();\n    }\n\n    @computed\n    get signed_in(): boolean {\n        return this.saved_state.login_token && this.login_token_validated;\n    }\n\n    @computed\n    get have_selection(): boolean {\n        return this.selected_person != null;\n    }\n\n    @action\n    clear_selection() {\n        this.selected_person = null;\n    }\n\n    @action(\"Select Person\")\n    select(person: Person, date: Date, role: Role) {\n        this.selected_person = person;\n        this.selected_date = date;\n        this.selected_role = role;\n    }\n\n    clear_sheet_state() {\n        this.saved_state.clear_all_sheet_state();\n    }\n\n    logout() {\n        this.saved_state.login_token = null;\n        this.signed_in_to_google = false;\n    }\n}\n\nexport {\n    UIStore,\n    SavedState\n}\n\n\n// WEBPACK FOOTER //\n// ./src/store/UIState.ts","import {\n    defaultAcousticGuitar,\n    defaultBass,\n    defaultComputerRole,\n    defaultDrumsRole,\n    defaultElectricGuitar,\n    defaultKeysRole,\n    defaultLeaderRole,\n    defaultSaxRole,\n    defaultSoundRole,\n    defaultVocalsRole\n} from \"../../scheduling/tests/roles\";\n\nimport {PeopleStore, Person} from \"../../scheduling/people\";\nimport {Availability, AvailabilityEveryNOfM, AvailabilityUnit} from \"../../scheduling/tests/scheduling-types\";\nimport {ScheduleOn, TryToScheduleWith} from \"../../scheduling/rule_based/rules\";\nimport {Organization, OrganizationStore} from \"../../scheduling/organization\";\nimport {csd} from \"../../scheduling/common/date-utils\";\nimport {RootStore} from \"../../store/root\";\n\nlet neil: Person = new Person(\"Neil Clayton\");\nlet cherilyn: Person = new Person(\"Cherilyn Clayton\");\nlet kylie: Person = new Person(\"Kylie Welch-Herekiuha\");\nlet christine: Person = new Person(\"Christine Edlin\");\nlet stuart: Person = new Person(\"Stuart Campbell\");\nlet jeremy_selfe: Person = new Person(\"Jeremy Selfe\");\n\nlet daniel: Person = new Person(\"Daniel Gibbs\");\nlet ben: Person = new Person(\"Ben Watson\");\nlet courtney: Person = new Person(\"Courtney Anderson\");\nlet robs: Person = new Person(\"Rob Sweeney\");\nlet robp: Person = new Person(\"Rob Penhey\");\nlet dave: Person = new Person(\"Dave Humphries\");\nlet ralph: Person = new Person(\"Ralph Lambert\");\nlet anita: Person = new Person(\"Anita Lambert\");\nlet annie: Person = new Person(\"Annie McMullen\");\nlet jo: Person = new Person(\"Jo Marquet\");\nlet allie: Person = new Person(\"Allie Pope\");\nlet craig: Person = new Person(\"Craig Campbell\");\n\nlet chris: Person = new Person(\"Chris Evans\");\nlet jeremy_l: Person = new Person(\"Jeremy Legg\");\nlet andre_l: Person = new Person(\"Andre Legg\");\nlet suzie_l: Person = new Person(\"Suzie Legg\");\nlet jeremy_w: Person = new Person(\"Jeremy Watson\");\nlet john: Person = new Person(\"John Sutherland\");\n\n/*\nAdd unavailability here\n */\nchris.add_unavailable(csd(2018, 7, 15));\n\njeremy_selfe.add_unavailable(csd(2018, 6, 3));\njeremy_selfe.add_unavailable(csd(2018, 7, 1));\n\ncherilyn.add_unavailable_range(csd(2018, 7, 14), csd(2018, 7, 29));\ncherilyn.add_unavailable(csd(2018, 6, 17), 'ob meeting');\ncherilyn.add_unavailable(csd(2018, 7, 1), 'ob meeting');\ncherilyn.add_unavailable(csd(2018, 8, 19), 'mental health!');\n\nchristine.add_unavailable(csd(2018, 5, 6));\nchristine.add_unavailable(csd(2018, 6, 17));\nchristine.add_unavailable(csd(2018, 7, 22));\n\njeremy_l.add_unavailable(csd(2018, 6, 17));\n\njeremy_w.add_unavailable(csd(2018, 6, 3));\njeremy_w.add_unavailable(csd(2018, 7, 8));\njeremy_w.add_unavailable(csd(2018, 7, 22));\n\nstuart.add_unavailable_range(csd(2018, 8, 12), csd(2018, 9, 9));\n\nallie.add_unavailable(csd(2018, 6, 3));\nallie.add_unavailable(csd(2018, 7, 22));\n\ncraig.add_unavailable_range(csd(2018, 8, 12), csd(2018, 9, 9));\n\n\nexport class NPBCStoreConstruction {\n    constructor() {\n    }\n\n    static SetupStore(person_store: PeopleStore, org_store: OrganizationStore) {\n\n        /*\n        Add specifics here\n        */\n        // daniel.put_on_specific_role_for_date(defaultComputerRole, csd(2018, 6, 17));\n\n\n        org_store.addOrganizaton(new Organization(\"North Porirua Baptist Church\"));\n\n        person_store.add_person(neil)\n            .add_role(defaultSoundRole, 1)\n            .add_role(defaultSaxRole, 3)\n            .avail_every(4, AvailabilityUnit.EVERY_N_WEEKS);\n        neil.add_secondary_action(new TryToScheduleWith(cherilyn, new Availability(1, AvailabilityUnit.EVERY_N_WEEKS), 2));\n\n        person_store.add_person(cherilyn)\n            .add_role(defaultKeysRole)\n            .avail_every(2, AvailabilityUnit.EVERY_N_WEEKS);\n        cherilyn.if_assigned_to(defaultLeaderRole).then(new ScheduleOn(cherilyn, defaultKeysRole));\n\n        person_store.add_person(christine)\n            .add_role(defaultVocalsRole)\n            .avail_every(2, AvailabilityUnit.EVERY_N_WEEKS);\n        // christine.if_assigned_to(defaultLeaderRole).then(new ScheduleOn(christine, defaultVocalsRole));\n\n        person_store.add_person(stuart)\n            .add_role(defaultAcousticGuitar)\n            .add_role(defaultVocalsRole)\n            .avail_every(4, AvailabilityUnit.EVERY_N_WEEKS);\n        stuart.if_assigned_to(defaultLeaderRole).then(new ScheduleOn(stuart, defaultAcousticGuitar));\n        stuart.if_assigned_to(defaultLeaderRole).then(new ScheduleOn(stuart, defaultVocalsRole));\n\n        person_store.add_person(kylie)\n            .add_role(defaultAcousticGuitar)\n            .avail_every(2, AvailabilityUnit.EVERY_N_WEEKS);\n\n        kylie.if_assigned_to(defaultAcousticGuitar).then(new ScheduleOn(kylie, defaultVocalsRole));\n\n        person_store.add_person(jeremy_selfe)\n            .add_role(defaultLeaderRole, 2)\n            .add_role(defaultElectricGuitar)\n            .avail_every(2, AvailabilityUnit.EVERY_N_WEEKS);\n        jeremy_selfe.if_assigned_to(defaultLeaderRole).then(new ScheduleOn(jeremy_selfe, defaultElectricGuitar));\n\n        person_store.add_person(ralph)\n            .add_role(defaultAcousticGuitar)\n            .avail_every(3, AvailabilityUnit.EVERY_N_WEEKS);\n        ralph.if_assigned_to(defaultAcousticGuitar).then(new ScheduleOn(anita, defaultVocalsRole));\n\n        person_store.add_person(daniel)\n            .add_role(defaultDrumsRole, 3)\n            .add_role(defaultBass);\n\n        person_store.add_person(craig)\n            .add_role(defaultDrumsRole)\n            .set_availability(new AvailabilityEveryNOfM(1, 3));\n\n        person_store.add_person(ben)\n            .add_role(defaultBass, 1)\n            // .add_role(defaultDrumsRole, 3)\n            .avail_every(2, AvailabilityUnit.EVERY_N_WEEKS);\n\n        person_store.add_person(courtney)\n            .add_role(defaultVocalsRole)\n            .avail_every(2, AvailabilityUnit.EVERY_N_WEEKS);\n\n        person_store.add_person(robp)\n            .add_role(defaultBass, 3)\n            .add_role(defaultSoundRole)\n            .avail_every(3, AvailabilityUnit.EVERY_N_WEEKS);\n\n        person_store.add_person(robs)\n            .add_role(defaultBass)\n            .avail_every(2, AvailabilityUnit.EVERY_N_WEEKS);\n\n        person_store.add_person(dave)\n            .add_role(defaultAcousticGuitar)\n            .add_role(defaultVocalsRole)\n            .avail_every(2.2, AvailabilityUnit.EVERY_N_WEEKS);\n        dave.if_assigned_to(defaultAcousticGuitar).then(new ScheduleOn(dave, defaultVocalsRole));\n\n        person_store.add_person(anita)\n            .add_role(defaultVocalsRole)\n            .avail_every(2, AvailabilityUnit.EVERY_N_WEEKS);\n\n        person_store.add_person(annie)\n            .add_role(defaultVocalsRole)\n            .avail_every(3, AvailabilityUnit.EVERY_N_WEEKS);\n\n        person_store.add_person(jo)\n            .add_role(defaultVocalsRole)\n            .avail_every(3, AvailabilityUnit.EVERY_N_WEEKS);\n\n        person_store.add_person(allie)\n            .add_role(defaultVocalsRole)\n            .avail_every(3, AvailabilityUnit.EVERY_N_WEEKS);\n\n        person_store.add_person(chris)\n            .add_role(defaultSoundRole)\n            .add_role(defaultElectricGuitar)\n            .avail_every(3, AvailabilityUnit.EVERY_N_WEEKS);\n\n        person_store.add_person(jeremy_l)\n            .add_role(defaultSoundRole, 2)\n            .add_role(defaultComputerRole)\n            .avail_every(2, AvailabilityUnit.EVERY_N_WEEKS);\n\n        person_store.add_person(andre_l)\n            .add_role(defaultSoundRole)\n            .add_role(defaultElectricGuitar)\n            .avail_every(2, AvailabilityUnit.EVERY_N_WEEKS);\n\n        person_store.add_person(suzie_l)\n            .add_role(defaultElectricGuitar)\n            .avail_every(4, AvailabilityUnit.EVERY_N_WEEKS);\n\n        person_store.add_person(jeremy_w)\n            .add_role(defaultSoundRole, 2)\n            .add_role(defaultComputerRole)\n            .avail_every(2, AvailabilityUnit.EVERY_N_WEEKS);\n\n        person_store.add_person(john)\n            .add_role(defaultSoundRole)\n            .add_role(defaultComputerRole, 2)\n            .avail_every(1, AvailabilityUnit.EVERY_N_WEEKS);\n    }\n}\n\n\nexport class ThamesTest {\n    constructor() {\n    }\n\n    static SetupStore(root_store: RootStore) {\n        let lynette = new Person(\"Lynette Mill\");\n        let eddie = new Person(\"Eddie\");\n        let donald = new Person(\"Donald\");\n        let levi = new Person(\"Levi\");\n        let brian = new Person(\"Brian\");\n        let zoe = new Person(\"Zoe\");\n        let paul = new Person(\"Paul\");\n        let shaz = new Person(\"Shaz\");\n        let aria = new Person(\"Aria\");\n        let bronwyn = new Person(\"Bronwyn\");\n        let foster = new Person(\"Foster\");\n        let elizabeth = new Person(\"Elizabeth\");\n        let gael = new Person(\"Gael\");\n        let bernard = new Person(\"Bernard\");\n        let felicia = new Person(\"Felicia\");\n        let henryk = new Person(\"Henryk\");\n        let rose = new Person(\"Rose\");\n\n        let person_store: PeopleStore = root_store.people_store;\n        let org_store = root_store.organization_store;\n\n        org_store.addOrganizaton(new Organization(\"Thames Baptist Church\"));\n\n        person_store.add_person(foster)\n            .add_role(defaultComputerRole)\n            .avail_every(12, AvailabilityUnit.EVERY_N_WEEKS);\n\n        person_store.add_person(lynette)\n            .add_role(defaultLeaderRole)\n            .set_availability(new AvailabilityEveryNOfM(2, 3));\n\n        lynette.if_assigned_to(defaultLeaderRole).then(new ScheduleOn(lynette, defaultKeysRole));\n        lynette.if_assigned_to(defaultLeaderRole).then(new ScheduleOn(eddie, defaultVocalsRole));\n        lynette.if_assigned_to(defaultLeaderRole).then(new ScheduleOn(donald, defaultVocalsRole));\n        lynette.if_assigned_to(defaultLeaderRole).then(new ScheduleOn(henryk, defaultSoundRole));\n        lynette.if_assigned_to(defaultLeaderRole).then(new ScheduleOn(donald, defaultSaxRole));\n        lynette.if_assigned_to(defaultLeaderRole).then(new ScheduleOn(donald, defaultAcousticGuitar));\n        lynette.if_assigned_to(defaultLeaderRole).then(new ScheduleOn(levi, defaultBass));\n\n        person_store.add_person(eddie)\n            .add_role(defaultVocalsRole)\n            .add_role(defaultSoundRole)\n            .avail_every(2, AvailabilityUnit.EVERY_N_WEEKS);\n\n        person_store.add_person(donald)\n            .add_role(defaultSoundRole)\n            .avail_every(2, AvailabilityUnit.EVERY_N_WEEKS);\n\n        person_store.add_person(levi)\n            .add_role(defaultBass)\n            .avail_every(2, AvailabilityUnit.EVERY_N_WEEKS);\n\n        person_store.add_person(elizabeth)\n            .add_role(defaultComputerRole)\n            .avail_every(6, AvailabilityUnit.EVERY_N_WEEKS);\n\n        person_store.add_person(gael)\n            .add_role(defaultComputerRole)\n            .avail_every(1, AvailabilityUnit.EVERY_N_WEEKS);\n\n        person_store.add_person(felicia)\n            .add_role(defaultComputerRole)\n            .avail_every(1, AvailabilityUnit.EVERY_N_WEEKS);\n\n        person_store.add_person(rose)\n            .add_role(defaultComputerRole)\n            .avail_every(1, AvailabilityUnit.EVERY_N_WEEKS);\n\n        person_store.add_person(bernard);\n\n        person_store.add_person(henryk)\n            .add_role(defaultSoundRole)\n            .avail_every(10, AvailabilityUnit.EVERY_N_WEEKS);\n        henryk.if_assigned_to(defaultSoundRole).then(new ScheduleOn(felicia, defaultComputerRole));\n\n        person_store.add_person(shaz)\n            .add_role(defaultLeaderRole)\n            .avail_every(1, AvailabilityUnit.EVERY_N_WEEKS);\n\n        shaz.if_assigned_to(defaultLeaderRole).then(new ScheduleOn(shaz, defaultAcousticGuitar));\n        shaz.if_assigned_to(defaultLeaderRole).then(new ScheduleOn(bronwyn, defaultVocalsRole));\n        shaz.if_assigned_to(defaultLeaderRole).then(new ScheduleOn(aria, defaultDrumsRole));\n        shaz.if_assigned_to(defaultLeaderRole).then(new ScheduleOn(bernard, defaultSoundRole));\n\n        person_store.add_person(brian)\n            .add_role(defaultLeaderRole)\n            .avail_every(1, AvailabilityUnit.EVERY_N_WEEKS);\n        brian.if_assigned_to(defaultLeaderRole).then(new ScheduleOn(zoe, defaultLeaderRole));\n        brian.if_assigned_to(defaultLeaderRole).then(new ScheduleOn(bronwyn, defaultVocalsRole));\n        brian.if_assigned_to(defaultLeaderRole).then(new ScheduleOn(donald, defaultSoundRole));\n        brian.if_assigned_to(defaultLeaderRole).then(new ScheduleOn(paul, defaultSaxRole));\n\n        /*\n        2 levels of availability.\n        1) Always on when leader X is on (which is what we do now)\n        2) Alternating people in a dependent role (weighting), when leader X is on\n         */\n\n        gael.add_unavailable(csd(2018, 3, 4), \"trip\");\n        brian.add_unavailable_range(csd(2018, 2, 10), csd(2018, 3, 4));\n        lynette.add_unavailable_range(csd(2017, 12, 24), csd(2018, 1, 28));\n        // lynette.add_unavailable(csd(2018, 2, 11))\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/store/test.store.ts","import {action, computed, observable} from \"mobx\";\nimport {Role} from \"./tests/roles\";\nimport {Availability, AvailabilityUnit, SchedulePrefs} from \"./tests/scheduling-types\";\nimport {\n    AssignedToRoleCondition,\n    ConditionalRule,\n    Rule,\n    SecondaryAction,\n    WeightedRoles\n} from \"./rule_based/rules\";\nimport {BaseStore, ObjectWithUUID} from \"./common/base_model\";\nimport {dayAndHourForDate, throwOnInvalidDate} from \"./common/date-utils\";\nimport {RuleFacts} from \"./rule_based/rule-facts\";\n\nimport {Unavailablity} from \"./unavailability\";\nimport * as _ from \"lodash\";\nimport {isUndefined} from \"util\";\n\nexport class Person extends ObjectWithUUID {\n    name: string;\n\n    primary_roles: Map<Role, number>;\n    specific_roles: Map<string, Array<Role>>;\n\n    @observable unavailable: Array<Unavailablity>;\n    @observable prefs: SchedulePrefs;\n\n    private condition_rules: Array<ConditionalRule>;\n    private secondary_action_list: Array<SecondaryAction>;\n\n    // Need to store a role, and also for this person, if they are in this role what\n    // other roles they can also fullfill. However; mobx doesn't like using objects as keys\n    // in maps, which is a pain.\n    // secondary_roles: Map<string, Array<Role>>;\n\n    constructor(name: string = \"put name here\") {\n        super();\n        this.name = name;\n        this.primary_roles = new Map<Role, number>();\n        this.specific_roles = new Map<string, Array<Role>>();\n        this.secondary_action_list = [];\n        this.condition_rules = [];\n        this.unavailable = [];\n        this.prefs = new SchedulePrefs();\n    }\n\n    get availability(): Availability {\n        return this.prefs.availability;\n    }\n\n    role_rules(): Array<Rule> {\n        let rules = [];\n\n        // TODO: Hmm. Could add unavailability dates as rules?\n        // Have a rule that returns NO roles if the person is unavailable.\n        // Could do that on the Pick as well. Here might be a little cleaner, model wise.\n\n        // Add in weighted role distribution\n        let weighting = new WeightedRoles(this.primary_roles);\n        rules.push(weighting);\n\n        return rules;\n    }\n\n    put_on_specific_role_for_date(role: Role, date: Date) {\n        let key = dayAndHourForDate(date);\n        if (!this.specific_roles.has(key)) {\n            this.specific_roles.set(key, new Array<Role>());\n        }\n        let role_list = this.specific_roles.get(key);\n        role_list.push(role);\n    }\n\n    specific_roles_for_date(date: Date): Array<Role> {\n        let key = dayAndHourForDate(date);\n        return this.specific_roles.get(key);\n    }\n\n    @computed\n    get roles(): Array<Role> {\n        return Array.from(this.primary_roles.keys());\n    }\n\n    @computed\n    get highest_role_layout_priority(): number {\n        return this.roles.reduce((previousMax, role) => {\n            return Math.max(previousMax, role.layout_priority);\n        }, 0);\n    }\n\n    @action\n    avail_every(a_number: number, unit: AvailabilityUnit): Person {\n        return this.set_availability(new Availability(a_number, unit));\n    }\n\n    @action\n    set_availability(availability: Availability): Person {\n        this.prefs.availability = availability;\n        return this;\n    }\n\n    get max_role_layout_priority(): number {\n        return this.roles.reduce((prev, role) => {\n            return Math.max(prev, role.layout_priority);\n        }, 0);\n    }\n\n    get conditional_rules(): Array<ConditionalRule> {\n        return this.condition_rules;\n    }\n\n    get secondary_actions(): Array<SecondaryAction> {\n        return this.secondary_action_list;\n    }\n\n    add_secondary_action(action: SecondaryAction) {\n        if (action) {\n            // Assign the owner\n            action.owner = this;\n            this.secondary_action_list.push(action);\n        }\n    }\n\n    if_assigned_to(role: Role): ConditionalRule {\n        this.add_role(role);\n\n        let roleRule = new AssignedToRoleCondition(role);\n        this.condition_rules.push(roleRule);\n        return roleRule;\n    }\n\n    has_primary_role(role: Role) {\n        let matching_roles = this.roles.filter(r => {\n            return r.uuid == role.uuid;\n        });\n        return matching_roles.length > 0;\n    }\n\n    @action\n    add_role(r: Role, weighting = 1): Person {\n        if (r == null || isUndefined(r)) {\n            throw Error(\"Cannot add a nil or undefined role\");\n        }\n        this.primary_roles.set(r, weighting);\n        return this;\n    }\n\n    @action\n    remove_role(r: Role): Person {\n        this.primary_roles.delete(r);\n        return this;\n    }\n\n    @action\n    add_unavailable(d: Date, reason = null) {\n        this.unavailable.push(new Unavailablity(d, null, reason));\n    }\n\n    add_unavailable_range(from: Date, to: Date, reason = null) {\n        this.unavailable.push(new Unavailablity(from, to, reason));\n    }\n\n    remove_unavailable(d: Date) {\n        this.unavailable = this.unavailable.filter(ud => {\n            return !ud.matches_single_date(d);\n        });\n    }\n\n    is_available(date: Date, facts: RuleFacts, record_unavailability: boolean = false) {\n        // console.log(\"Testing availability with: \" + this.availability.constructor.name);\n        throwOnInvalidDate(date);\n        return this.availability.is_available(this, date, facts, record_unavailability);\n    }\n\n    is_unavailable_on(date: Date) {\n        // See if this date is inside the unavailable date ranges\n        for (let unavail of this.unavailable) {\n            if (unavail.contains_date(date)) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    get unavailable_by_date(): Array<Unavailablity> {\n        return _.sortBy(this.unavailable, u => u.from_date);\n    }\n\n    valueOf() {\n        return \"[Person:\" + this.name + \"]\";\n    }\n}\n\nexport class PeopleStore extends BaseStore<Person> {\n    constructor() {\n        super();\n    }\n\n    @action\n    add_person(p: Person): Person {\n        return this.add_object_to_array(p);\n    }\n\n    @action\n    remove_person(p: Person) {\n        this.remove_object_from_array(p);\n    }\n\n    get people(): Array<Person> {\n        return this.items;\n    }\n\n    try_find_single_person_with(callback) {\n        let all_people = this.people.filter(callback);\n        if (all_people.length) {\n            if (all_people.length > 1) {\n                throw new Error(`Searching for ${name} returns more than one person. Returns: ${JSON.stringify(all_people)}`);\n            }\n            return all_people[0];\n        }\n        return null;\n    }\n\n    find_person_with_name(name: string, fuzzy_match: boolean = false) {\n        if (isUndefined(name)) {\n            return null;\n        }\n        let person = this.try_find_single_person_with(p => p.name.toLocaleLowerCase() == name.toLocaleLowerCase());\n        if (!person && fuzzy_match) {\n            person = this.try_find_single_person_with(p => p.name.toLocaleLowerCase().startsWith(name.toLocaleLowerCase()));\n            if (!person) {\n                // Try first word and first char of 2nd word\n                let terms = name.split(' ');\n                if (terms.length > 1) {\n                    let search = `${terms[0]} ${terms[1][0]}`.toLocaleLowerCase();\n                    // console.log(`Try ${search} for ${name}`);\n                    person = this.try_find_single_person_with(p => p.name.toLocaleLowerCase().startsWith(search));\n                }\n            }\n        }\n        return person;\n    }\n\n    people_with_role(role: Role) {\n        return this.people.filter(person => {\n            for (let person_role of person.roles) {\n                if (role.uuid == person_role.uuid) {\n                    return true;\n                }\n            }\n            return false;\n        });\n    }\n\n    get roles_for_all_people(): Array<Role> {\n        let all_roles = _.flatMap(this.people, (p) => p.roles);\n        return _.uniqBy(all_roles, (r) => r.uuid);\n    }\n\n    order_people_by_role_layout_priority() {\n        return this.people.sort((p1: Person, p2: Person) => {\n            let maxlp1 = p1.max_role_layout_priority;\n            let maxlp2 = p2.max_role_layout_priority;\n            return maxlp1 < maxlp2 ? 1 : maxlp1 > maxlp2 ? -1 : 0;\n        });\n    }\n}\n\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/scheduling/people.ts","import {Component} from '@angular/core';\nimport {IonicPage, NavController} from 'ionic-angular';\nimport {CSVExporter} from \"../../scheduling/exporter/csv.exporter\";\nimport {GAPIS} from \"../../common/gapis-auth\";\nimport {SheetSelectionPage} from \"../sheet-selection/sheet-selection\";\nimport {Logger, LoggingService} from \"ionic-logging-service\";\nimport {toJS} from \"mobx\";\nimport {SpreadsheetReader} from \"../../common/spreadsheet_reader\";\nimport {ServerProvider} from \"../../providers/server/server\";\nimport {RootStore} from \"../../store/root\";\n\n\n@IonicPage({\n    defaultHistory: ['home'],\n    name: 'home'\n})\n@Component({\n    selector: 'page-home',\n    templateUrl: 'home.html'\n})\nexport class HomePage {\n    private logger: Logger;\n\n    constructor(public navCtrl: NavController,\n                private loggingService: LoggingService,\n                private sheetAPI: GAPIS,\n                private server: ServerProvider,\n                // private modalController: ModalController,\n                private rootStore: RootStore) {\n        this.logger = this.loggingService.getLogger(\"home\");\n    }\n\n    ionViewDidEnter() {\n        this.sheetAPI.init();\n\n        let readyEvent = this.rootStore.ready_event;\n        readyEvent.subscribe(value => {\n            if (value) {\n                this.server.validateLoginToken().subscribe(resp => {\n                    console.log(`Validation returned: ${JSON.stringify(resp)}`);\n                    if (!this.rootStore.ui_store.signed_in) {\n                        this.navCtrl.push('login');\n                    } else {\n\n                    }\n                });\n            }\n        });\n    }\n\n    clear_selection() {\n        this.rootStore.ui_store.clear_selection();\n    }\n\n    select_previous_schedule() {\n        this.navCtrl.push(SheetSelectionPage, {\n            title: \"Select sheet to use as previous schedule\",\n            tab_title: \"Select tab to use as previous schedule\",\n            done: (spreadsheet, sheet, error) => {\n                console.log(\"Done. Selected sheet: \" + spreadsheet.spreadsheetId + \", and tab: \" + sheet.properties.title + \", \" + sheet.properties.sheetId);\n                this.rootStore.state.previous_sheet_id = spreadsheet.spreadsheetId;\n                this.rootStore.state.previous_sheet_tab_id = sheet.properties.sheetId;\n            }\n        });\n    }\n\n    read_as_previous_schedule() {\n        if (this.rootStore.ui_store.saved_state.have_previous_selection) {\n            let sheet_id = this.rootStore.ui_store.saved_state.previous_sheet_id;\n            this.sheetAPI.load_sheet_with_id(sheet_id).subscribe((spreadsheet) => {\n                let sheet = spreadsheet.sheets.find(s => s.properties.sheetId == this.rootStore.state.previous_sheet_tab_id);\n                this.sheetAPI.read_spreadsheet_data(spreadsheet, sheet).subscribe(rows => {\n\n                    let reader = new SpreadsheetReader();\n                    reader.parse_schedule_from_spreadsheet(rows);\n\n                    if (reader.has_problems) {\n                        let dump_map = {};\n                        for (let key of Array.from(reader.problems.keys())) {\n                            dump_map[key] = Array.from(reader.problems.get(key));\n                        }\n                        let problems = toJS(dump_map);\n                        let s = JSON.stringify(problems);\n                        this.logger.info(`Had problems: ${s}`);\n                    }\n                    this.logger.info(\"Made schedule!\");\n                    this.rootStore.set_previous_schedule(reader.schedule);\n                });\n            });\n        }\n    }\n\n    export_as_sheets() {\n        // Get the sheet and make sure we can read it.\n        let sheet_id = this.sheetAPI.state.google_sheet_id;\n        if (sheet_id) {\n            this.sheetAPI.load_sheet_with_id(sheet_id).subscribe((spreadsheet) => {\n                console.log(\"Loaded the sheet!\");\n                let sheet = spreadsheet.sheets.find(s => s.properties.sheetId == this.rootStore.state.google_sheet_tab_id);\n                this.sheetAPI.clear_and_write_schedule(spreadsheet, sheet, this.rootStore.schedule);\n            }, (error) => {\n                console.log(\"Error loading sheet: \" + error);\n            });\n        } else {\n            console.log(\"No sheet selected\");\n            // let popover = this.modalController.create(SheetSelectionPage);\n            // popover.present().then(() => {\n            // page is done.\n            // console.log(\"Done. Sheet: \" + this.rootStore.ui_store.google_sheet_id);\n            // });\n            this.navCtrl.push(SheetSelectionPage, {\n                title: \"Select sheet to export into\",\n                tab_title: \"Select tab to export into\",\n                done: (spreadsheet, sheet, error) => {\n                    this.rootStore.state.google_sheet_id = spreadsheet.spreadsheetId;\n                    this.rootStore.state.google_sheet_tab_id = sheet.properties.sheetId;\n                    console.log(\"Done. Selected sheet: \" + spreadsheet.spreadsheetId + \", and tab: \" + sheet.properties.title);\n                }\n            });\n        }\n    }\n\n    clear_sheet_state() {\n        this.rootStore.ui_store.clear_sheet_state();\n    }\n\n    export_as_csv() {\n        let exporter = new CSVExporter(this.rootStore.schedule);\n        exporter.write_to_file(\"schedule.csv\");\n    }\n\n    login() {\n        this.sheetAPI.authenticate();\n    }\n\n    logout() {\n        // Throw away our login token\n        // this.rootStore.ui_store.logout();\n        this.sheetAPI.signout();\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/home/home.ts","import {ApplicationRef, Component} from '@angular/core';\nimport {IonicPage, NavController, NavParams} from 'ionic-angular';\nimport {GAPIS} from \"../../common/gapis-auth\";\nimport Spreadsheet = gapi.client.sheets.Spreadsheet;\nimport Sheet = gapi.client.sheets.Sheet;\nimport {TabSelectionPage} from \"../tab-selection/tab-selection\";\n\n@IonicPage()\n@Component({\n    selector: 'page-sheet-selection',\n    templateUrl: 'sheet-selection.html',\n})\nexport class SheetSelectionPage {\n    public sheets: Array<any>;\n    public loading: boolean = false;\n    public title: string = \"foo\";\n\n    private done: (ss: Spreadsheet, sheet: Sheet, error?) => void = null;\n\n    constructor(public navCtrl: NavController,\n                public navParams: NavParams,\n                private ar: ApplicationRef,\n                private api: GAPIS) {\n        this.sheets = [];\n        this.done = navParams.get('done');\n        this.title = navParams.get('title') || \"Select a sheet to use\";\n    }\n\n    ionViewDidEnter() {\n        this.loadSheets();\n    }\n\n    ionViewDidLeave() {\n    }\n\n    selectSheet(sheet_metadata) {\n        if (sheet_metadata) {\n            // console.log(\"Clicked: \" + JSON.stringify(sheet_metadata));\n            // this.rootStore.state.google_sheet_id = sheet_metadata.id;\n\n            // Push on the tab navigator\n            let tab_title = this.navParams.get('tab_title') || 'Select tab to use';\n            this.navCtrl.push(TabSelectionPage, {\n                'sheet_id': sheet_metadata.id,\n                'title' : tab_title,\n                'done': (ss: Spreadsheet, sheet: Sheet, error) => {\n                    if (error) {\n                        this.done(null, null, error);\n                    } else {\n                        this.done(ss, sheet);\n                    }\n                    this.navCtrl.pop();\n                }\n            });\n        }\n    }\n\n    private loadSheets() {\n        this.loading = true;\n        this.api.list_all_sheets().subscribe((sheets) => {\n            this.sheets = Array.from(sheets);\n            // console.log(\"Finished loading: \" + this.sheets.length + \" items\");\n            this.loading = false;\n            this.ar.tick();\n        });\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/sheet-selection/sheet-selection.ts","import {ApplicationRef, Component} from '@angular/core';\nimport {IonicPage, NavController, NavParams} from 'ionic-angular';\nimport {GAPIS} from \"../../common/gapis-auth\";\nimport Spreadsheet = gapi.client.sheets.Spreadsheet;\nimport Sheet = gapi.client.sheets.Sheet;\n\n@IonicPage()\n@Component({\n    selector: 'page-tab-selection',\n    templateUrl: 'tab-selection.html',\n})\nexport class TabSelectionPage {\n    loading: boolean = false;\n\n    sheets = [];\n    sheet_id: string;\n\n    private done: (ss: Spreadsheet, sheet: Sheet, error?) => void = null;\n    private spreadsheet: gapi.client.sheets.Spreadsheet;\n    private title: string;\n\n    constructor(public navCtrl: NavController,\n                public navParams: NavParams,\n                private ar: ApplicationRef,\n                private api: GAPIS) {\n\n        this.sheet_id = navParams.get('sheet_id');\n        this.done = navParams.get('done');\n        this.title = navParams.get('title') || \"Select a sheet to use\";\n    }\n\n    ionViewDidLoad() {\n        this.api.load_sheet_with_id(this.sheet_id).subscribe((spreadsheet) => {\n            this.loading = false;\n            this.sheets = spreadsheet.sheets;\n            this.spreadsheet = spreadsheet;\n            this.ar.tick();\n        }, err => {\n            console.log(\"Can't load the spreadsheet. Arg: \" + err);\n            this.done(null, null, err);\n            this.navCtrl.pop();\n        });\n    }\n\n    select_sheet(sheet) {\n        console.log(\"Selected: \" + sheet);\n        if (this.done) {\n            this.done(this.spreadsheet, sheet);\n        }\n        this.navCtrl.pop();\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/tab-selection/tab-selection.ts","import {NgModule} from '@angular/core';\nimport {IonicPageModule} from 'ionic-angular';\nimport {LoginPage} from './login';\nimport {ComponentsModule} from \"../../components/components.module\";\n\n@NgModule({\n    declarations: [\n        LoginPage,\n    ],\n    imports: [\n        ComponentsModule,\n        IonicPageModule.forChild(LoginPage),\n    ],\n})\nexport class LoginPageModule {\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/login/login.module.ts","import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { SheetSelectionPage } from './sheet-selection';\n\n@NgModule({\n  declarations: [\n    SheetSelectionPage,\n  ],\n  imports: [\n    IonicPageModule.forChild(SheetSelectionPage),\n  ],\n})\nexport class SheetSelectionPageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/sheet-selection/sheet-selection.module.ts","import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { TabSelectionPage } from './tab-selection';\n\n@NgModule({\n  declarations: [\n    TabSelectionPage,\n  ],\n  imports: [\n    IonicPageModule.forChild(TabSelectionPage),\n  ],\n})\nexport class TabSelectionPageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/tab-selection/tab-selection.module.ts","import {PeopleStore} from \"../scheduling/people\";\nimport {RolesStore} from \"../scheduling/tests/roles\";\nimport {SavedState, UIStore} from \"./UIState\";\nimport {ApplicationRef, Injectable} from \"@angular/core\";\nimport {Storage} from \"@ionic/storage\";\nimport {NPBCStoreConstruction} from \"../providers/store/test.store\";\nimport {action, autorun, computed, IReactionDisposer, observable, toJS} from \"mobx\";\nimport {ScheduleInput} from \"../scheduling/common\";\nimport {ScheduleWithRules} from \"../scheduling/rule_based/scheduler\";\nimport {OrganizationStore} from \"../scheduling/organization\";\nimport {csd} from \"../scheduling/common/date-utils\";\nimport {Logger, LoggingService} from \"ionic-logging-service\";\nimport {Observable} from \"rxjs/Observable\";\n\nconst SAVED_STATE_KEY = 'saved_state';\n\n@Injectable()\nclass RootStore {\n    @observable people_store: PeopleStore;\n    @observable roles_store: RolesStore;\n    @observable organization_store: OrganizationStore;\n    @observable ui_store: UIStore;\n\n    @observable schedule: ScheduleWithRules;\n    @observable previous_schedule: ScheduleWithRules;\n\n    ready_event: Observable<boolean>;\n\n    private regenerator: IReactionDisposer;\n    private saving: IReactionDisposer;\n    private logger: Logger;\n\n    constructor(private storage: Storage,\n                private loggingService: LoggingService,\n                private appRef: ApplicationRef) {\n        this.people_store = new PeopleStore();\n        this.roles_store = new RolesStore();\n        this.organization_store = new OrganizationStore();\n        this.ui_store = new UIStore();\n        this.logger = this.loggingService.getLogger(\"store\");\n\n        NPBCStoreConstruction.SetupStore(this.people_store, this.organization_store);\n        // ThamesTest.SetupStore(this);\n\n        this.load();\n    }\n\n    private load() {\n        this.ready_event = Observable.create(obs => {\n            this.storage.get(SAVED_STATE_KEY).then((state) => {\n                if (state) {\n                    this.logger.info(\"Restored saved state: \" + JSON.stringify(state));\n                    this.ui_store.saved_state = Object.assign(new SavedState(), state)\n                } else {\n                    this.logger.info(\"Setup state first time\");\n                    this.ui_store.saved_state = new SavedState();\n                }\n                this.setupSaving();\n                obs.next(true);\n                obs.complete();\n            });\n        });\n        this.ready_event.subscribe();\n    }\n\n    @action\n    generate_schedule(): ScheduleWithRules {\n        // for testing, create some fake\n        let params = new ScheduleInput(this.people_store, this.roles_store);\n        params.start_date = csd(2018, 6, 3);\n        params.end_date = csd(2018, 9, 30);\n\n        this.schedule = new ScheduleWithRules(params, this.previous_schedule);\n        this.schedule.create_schedule();\n\n        this.appRef.tick();\n        return this.schedule;\n    }\n\n    set_previous_schedule(schedule: ScheduleWithRules) {\n        this.previous_schedule = schedule;\n        this.schedule = null;\n\n        // this.generate_schedule();\n    }\n\n    @computed\n    get state(): SavedState {\n        return this.ui_store.saved_state;\n    }\n\n    private setupSaving() {\n        this.logger.info(\"Setting up state auto-saving...\");\n        this.saving = autorun(() => {\n            // toJS creates a deep clone, thus accesses all of the properties of this.state\n            // so: we SHOULD respond to state changes.\n            this.storage.set(SAVED_STATE_KEY, toJS(this.state)).then(() => {\n                this.logger.info(\"Saved state: \" + JSON.stringify(this.state));\n            });\n        });\n        this.regenerator = autorun(() => {\n            this.logger.info(\"Generate schedule...\");\n            // this.generate_schedule();\n        });\n    }\n}\n\nexport {RootStore}\n\n\n// WEBPACK FOOTER //\n// ./src/store/root.ts","import { Component } from '@angular/core';\nimport { NavController } from 'ionic-angular';\n\n@Component({\n  selector: 'page-about',\n  templateUrl: 'about.html'\n})\nexport class AboutPage {\n\n  constructor(public navCtrl: NavController) {\n\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/about/about.ts","import { Component } from '@angular/core';\nimport { NavController } from 'ionic-angular';\n\n@Component({\n  selector: 'page-people',\n  templateUrl: 'people.html'\n})\nexport class PeoplePage {\n\n  constructor(public navCtrl: NavController) {\n\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/people/people.ts","import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app.module';\nimport {spy} from \"mobx\";\n\nspy((event) => {\n    if (event.type === 'action') {\n        // console.log(`SPY: ${event.name} with args: ${event.arguments}`)\n    } else if(event.type === 'update') {\n        // console.log(`SPY: update ${event.object.constructor.name}.${event.name}  from ${event.oldValue} to ${event.newValue}`)\n    }\n});\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main.ts","import {ApplicationRef, Component, Input} from '@angular/core';\nimport {isArray} from \"util\";\nimport {Person} from \"../../scheduling/people\";\nimport {PopoverController} from \"ionic-angular\";\nimport {ReasonsComponent} from \"../reasons/reasons\";\nimport {ScheduleWithRules} from \"../../scheduling/rule_based/scheduler\";\nimport {computed} from \"mobx\";\nimport {RootStore} from \"../../store/root\";\n\n@Component({\n    // changeDetection: ChangeDetectionStrategy.OnPush,\n    selector: 'schedule-viewer',\n    templateUrl: 'schedule-viewer.html'\n})\nexport class ScheduleViewerComponent {\n    @Input()\n    schedule:ScheduleWithRules;\n\n    constructor(private store: RootStore,\n                private appRef: ApplicationRef,\n                public popoverCtrl: PopoverController) {\n    }\n\n    @computed\n    get headers(): Array<string> {\n        if (!this.schedule) {\n            return [];\n        }\n        return this.schedule.jsonFields();\n    }\n\n    @computed\n    get rows(): Array<Object> {\n        if (!this.schedule) {\n            return [];\n        }\n        // console.log(JSON.stringify(this.schedule.jsonResult()));\n        return this.schedule.jsonResult();\n    }\n\n    presentPopover(myEvent) {\n        let popover = this.popoverCtrl.create(ReasonsComponent, {\n        });\n        popover.present({\n            ev: myEvent\n        });\n    }\n\n    keys_for_row(row) {\n        let keys = Object.keys(row).filter(v => !v.startsWith('date'));\n        return Array.from(keys);\n    }\n\n    value_as_array(value): any[] {\n        if (isArray(value)) {\n            return value;\n        }\n        return [value];\n    }\n\n    /*\n    Want to paint a rectangle, from the person@slot, to the end of their exclusion zone\n    Every time we place someone, we do create an exclusion that says \"jeremy, excluded 2 wks, due to guitar'\n\n    We can use this.\n    This method is called every cell. We're asking if this cell:\n    a) sits in an exclusion zone, for the selected person\n    b) where that exclusion zone includes the date of the row\n     */\n    in_exclusion_zone(row, role_name): boolean {\n        let person = this.selected_person;\n        if (!person) {\n            return false;\n        }\n        let role = this.store.roles_store.find_role(role_name);\n        if (!role) {\n            return false;\n        }\n\n        let date_for_row = row['date'];\n        return this.schedule.is_person_in_exclusion_zone(person, role, date_for_row);\n    }\n\n    /*\n    Want to mark if:\n    a) The person within this cell == the selected person\n     */\n    selected_and_in_role(obj: Object, role_name) {\n        if (obj instanceof Person) {\n            if (obj == null) {\n                console.error(\"a_person is null. This seems bad\");\n                return false;\n            }\n            let person = this.selected_person;\n            if (!person) {\n                return false;\n            }\n            if (obj.uuid != person.uuid) {\n                return false;\n            }\n            return this.store.roles_store.find_role(role_name);\n        }\n    }\n\n    select(obj: Object, date: Date, role_name: string) {\n        if (obj instanceof Person) {\n            let role = this.store.roles_store.find_role(role_name);\n            console.log(\"Selecting: \" + obj + \" on \" + date.toDateString() + \" for \" + role.name);\n\n            this.store.ui_store.select(obj, date, role);\n            this.appRef.tick();\n        }\n    }\n\n    textFor(obj: Object): string {\n        if (obj instanceof Person) {\n            return obj.name;\n        }\n        return obj.toString();\n    }\n\n    @computed\n    get selected_person(): Person {\n        if (!this.store.ui_store || this.store.ui_store.selected_person == null) {\n            return null;\n        }\n        return this.store.ui_store.selected_person;\n    }\n\n    get hover(): string {\n        if (!this.selected_person) {\n            return \"Nothing\";\n        }\n        return this.selected_person.name;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/schedule-viewer/schedule-viewer.ts","var map = {\n\t\"./af\": 206,\n\t\"./af.js\": 206,\n\t\"./ar\": 207,\n\t\"./ar-dz\": 208,\n\t\"./ar-dz.js\": 208,\n\t\"./ar-kw\": 209,\n\t\"./ar-kw.js\": 209,\n\t\"./ar-ly\": 210,\n\t\"./ar-ly.js\": 210,\n\t\"./ar-ma\": 211,\n\t\"./ar-ma.js\": 211,\n\t\"./ar-sa\": 212,\n\t\"./ar-sa.js\": 212,\n\t\"./ar-tn\": 213,\n\t\"./ar-tn.js\": 213,\n\t\"./ar.js\": 207,\n\t\"./az\": 214,\n\t\"./az.js\": 214,\n\t\"./be\": 215,\n\t\"./be.js\": 215,\n\t\"./bg\": 216,\n\t\"./bg.js\": 216,\n\t\"./bm\": 217,\n\t\"./bm.js\": 217,\n\t\"./bn\": 218,\n\t\"./bn.js\": 218,\n\t\"./bo\": 219,\n\t\"./bo.js\": 219,\n\t\"./br\": 220,\n\t\"./br.js\": 220,\n\t\"./bs\": 221,\n\t\"./bs.js\": 221,\n\t\"./ca\": 222,\n\t\"./ca.js\": 222,\n\t\"./cs\": 223,\n\t\"./cs.js\": 223,\n\t\"./cv\": 224,\n\t\"./cv.js\": 224,\n\t\"./cy\": 225,\n\t\"./cy.js\": 225,\n\t\"./da\": 226,\n\t\"./da.js\": 226,\n\t\"./de\": 227,\n\t\"./de-at\": 228,\n\t\"./de-at.js\": 228,\n\t\"./de-ch\": 229,\n\t\"./de-ch.js\": 229,\n\t\"./de.js\": 227,\n\t\"./dv\": 230,\n\t\"./dv.js\": 230,\n\t\"./el\": 231,\n\t\"./el.js\": 231,\n\t\"./en-au\": 232,\n\t\"./en-au.js\": 232,\n\t\"./en-ca\": 233,\n\t\"./en-ca.js\": 233,\n\t\"./en-gb\": 234,\n\t\"./en-gb.js\": 234,\n\t\"./en-ie\": 235,\n\t\"./en-ie.js\": 235,\n\t\"./en-il\": 236,\n\t\"./en-il.js\": 236,\n\t\"./en-nz\": 237,\n\t\"./en-nz.js\": 237,\n\t\"./eo\": 238,\n\t\"./eo.js\": 238,\n\t\"./es\": 239,\n\t\"./es-do\": 240,\n\t\"./es-do.js\": 240,\n\t\"./es-us\": 241,\n\t\"./es-us.js\": 241,\n\t\"./es.js\": 239,\n\t\"./et\": 242,\n\t\"./et.js\": 242,\n\t\"./eu\": 243,\n\t\"./eu.js\": 243,\n\t\"./fa\": 244,\n\t\"./fa.js\": 244,\n\t\"./fi\": 245,\n\t\"./fi.js\": 245,\n\t\"./fo\": 246,\n\t\"./fo.js\": 246,\n\t\"./fr\": 247,\n\t\"./fr-ca\": 248,\n\t\"./fr-ca.js\": 248,\n\t\"./fr-ch\": 249,\n\t\"./fr-ch.js\": 249,\n\t\"./fr.js\": 247,\n\t\"./fy\": 250,\n\t\"./fy.js\": 250,\n\t\"./gd\": 251,\n\t\"./gd.js\": 251,\n\t\"./gl\": 252,\n\t\"./gl.js\": 252,\n\t\"./gom-latn\": 253,\n\t\"./gom-latn.js\": 253,\n\t\"./gu\": 254,\n\t\"./gu.js\": 254,\n\t\"./he\": 255,\n\t\"./he.js\": 255,\n\t\"./hi\": 256,\n\t\"./hi.js\": 256,\n\t\"./hr\": 257,\n\t\"./hr.js\": 257,\n\t\"./hu\": 258,\n\t\"./hu.js\": 258,\n\t\"./hy-am\": 259,\n\t\"./hy-am.js\": 259,\n\t\"./id\": 260,\n\t\"./id.js\": 260,\n\t\"./is\": 261,\n\t\"./is.js\": 261,\n\t\"./it\": 262,\n\t\"./it.js\": 262,\n\t\"./ja\": 263,\n\t\"./ja.js\": 263,\n\t\"./jv\": 264,\n\t\"./jv.js\": 264,\n\t\"./ka\": 265,\n\t\"./ka.js\": 265,\n\t\"./kk\": 266,\n\t\"./kk.js\": 266,\n\t\"./km\": 267,\n\t\"./km.js\": 267,\n\t\"./kn\": 268,\n\t\"./kn.js\": 268,\n\t\"./ko\": 269,\n\t\"./ko.js\": 269,\n\t\"./ky\": 270,\n\t\"./ky.js\": 270,\n\t\"./lb\": 271,\n\t\"./lb.js\": 271,\n\t\"./lo\": 272,\n\t\"./lo.js\": 272,\n\t\"./lt\": 273,\n\t\"./lt.js\": 273,\n\t\"./lv\": 274,\n\t\"./lv.js\": 274,\n\t\"./me\": 275,\n\t\"./me.js\": 275,\n\t\"./mi\": 276,\n\t\"./mi.js\": 276,\n\t\"./mk\": 277,\n\t\"./mk.js\": 277,\n\t\"./ml\": 278,\n\t\"./ml.js\": 278,\n\t\"./mn\": 279,\n\t\"./mn.js\": 279,\n\t\"./mr\": 280,\n\t\"./mr.js\": 280,\n\t\"./ms\": 281,\n\t\"./ms-my\": 282,\n\t\"./ms-my.js\": 282,\n\t\"./ms.js\": 281,\n\t\"./mt\": 283,\n\t\"./mt.js\": 283,\n\t\"./my\": 284,\n\t\"./my.js\": 284,\n\t\"./nb\": 285,\n\t\"./nb.js\": 285,\n\t\"./ne\": 286,\n\t\"./ne.js\": 286,\n\t\"./nl\": 287,\n\t\"./nl-be\": 288,\n\t\"./nl-be.js\": 288,\n\t\"./nl.js\": 287,\n\t\"./nn\": 289,\n\t\"./nn.js\": 289,\n\t\"./pa-in\": 290,\n\t\"./pa-in.js\": 290,\n\t\"./pl\": 291,\n\t\"./pl.js\": 291,\n\t\"./pt\": 292,\n\t\"./pt-br\": 293,\n\t\"./pt-br.js\": 293,\n\t\"./pt.js\": 292,\n\t\"./ro\": 294,\n\t\"./ro.js\": 294,\n\t\"./ru\": 295,\n\t\"./ru.js\": 295,\n\t\"./sd\": 296,\n\t\"./sd.js\": 296,\n\t\"./se\": 297,\n\t\"./se.js\": 297,\n\t\"./si\": 298,\n\t\"./si.js\": 298,\n\t\"./sk\": 299,\n\t\"./sk.js\": 299,\n\t\"./sl\": 300,\n\t\"./sl.js\": 300,\n\t\"./sq\": 301,\n\t\"./sq.js\": 301,\n\t\"./sr\": 302,\n\t\"./sr-cyrl\": 303,\n\t\"./sr-cyrl.js\": 303,\n\t\"./sr.js\": 302,\n\t\"./ss\": 304,\n\t\"./ss.js\": 304,\n\t\"./sv\": 305,\n\t\"./sv.js\": 305,\n\t\"./sw\": 306,\n\t\"./sw.js\": 306,\n\t\"./ta\": 307,\n\t\"./ta.js\": 307,\n\t\"./te\": 308,\n\t\"./te.js\": 308,\n\t\"./tet\": 309,\n\t\"./tet.js\": 309,\n\t\"./tg\": 310,\n\t\"./tg.js\": 310,\n\t\"./th\": 311,\n\t\"./th.js\": 311,\n\t\"./tl-ph\": 312,\n\t\"./tl-ph.js\": 312,\n\t\"./tlh\": 313,\n\t\"./tlh.js\": 313,\n\t\"./tr\": 314,\n\t\"./tr.js\": 314,\n\t\"./tzl\": 315,\n\t\"./tzl.js\": 315,\n\t\"./tzm\": 316,\n\t\"./tzm-latn\": 317,\n\t\"./tzm-latn.js\": 317,\n\t\"./tzm.js\": 316,\n\t\"./ug-cn\": 318,\n\t\"./ug-cn.js\": 318,\n\t\"./uk\": 319,\n\t\"./uk.js\": 319,\n\t\"./ur\": 320,\n\t\"./ur.js\": 320,\n\t\"./uz\": 321,\n\t\"./uz-latn\": 322,\n\t\"./uz-latn.js\": 322,\n\t\"./uz.js\": 321,\n\t\"./vi\": 323,\n\t\"./vi.js\": 323,\n\t\"./x-pseudo\": 324,\n\t\"./x-pseudo.js\": 324,\n\t\"./yo\": 325,\n\t\"./yo.js\": 325,\n\t\"./zh-cn\": 326,\n\t\"./zh-cn.js\": 326,\n\t\"./zh-hk\": 327,\n\t\"./zh-hk.js\": 327,\n\t\"./zh-tw\": 328,\n\t\"./zh-tw.js\": 328\n};\nfunction webpackContext(req) {\n\treturn __webpack_require__(webpackContextResolve(req));\n};\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) // check for number or string\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\treturn id;\n};\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 537;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/moment/locale ^\\.\\/.*$\n// module id = 537\n// module chunks = 0","import {ObjectWithUUID} from \"./common/base_model\";\nimport {dayAndHourForDate} from \"./common/date-utils\";\n\nexport {Unavailablity};\n\nimport * as moment from \"moment\";\n\nclass Unavailablity extends ObjectWithUUID {\n    from_date: Date = null;\n    to_date: Date = null;\n    reason: string = null;\n\n    constructor(from: Date, to: Date = null, reason = null) {\n        super();\n        if (from == null) {\n            throw new Error(\"From date cannot be null\");\n        }\n        this.from_date = from;\n        this.to_date = to;\n        this.reason = reason;\n    }\n\n    get is_date_range(): boolean {\n        return this.from_date != null && this.to_date != null;\n    }\n\n    matches_single_date(d: Date) {\n        if (this.to_date != null) {\n            return false;\n        }\n        let thisDate = dayAndHourForDate(this.from_date);\n        let otherDate = dayAndHourForDate(d);\n        return thisDate == otherDate;\n    }\n\n    contains_date(date: Date) {\n        let start = moment(this.from_date).startOf('day');\n\n        // By default, be one day in length\n        let the_end_date = moment(this.from_date).endOf('day');\n\n        if (this.is_date_range) {\n            the_end_date = moment(this.to_date).endOf('day');\n        }\n\n        let date_as_moment = moment(date);\n        // console.log(\"Test for \" + date_as_moment + \" being between \" + start + \" and \" + the_end_date);\n        return date_as_moment.isBetween(start, the_end_date, null, \"[]\");\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/scheduling/unavailability.ts","import {FixedRoleOnDate, OnThisDate, Rule, UsageWeightedSequential, WeightedRoles} from \"./rules\";\nimport {Role, RolesStore} from \"../tests/roles\";\nimport {Logger} from \"ionic-logging-service\";\nimport {dayAndHourForDate, throwOnInvalidDate} from \"../common/date-utils\";\nimport {PeopleStore, Person} from \"../people\";\nimport {Exclusion, ScheduleAtDate} from \"../common\";\nimport {isUndefined} from \"ionic-angular/util/util\";\nimport {LoggingWrapper} from \"../../common/logging-wrapper\";\n\nexport class RuleFacts {\n    current_date: Date;\n    decisions_for_date: Array<string>;\n\n    private all_pick_rules: Map<Role, Array<Rule>>;\n    private all_role_rules: Map<Person, Array<Rule>>;\n\n    private exclusion_zones: Map<Person, Array<Exclusion>>;\n    private people: PeopleStore;\n    private roles: RolesStore;\n\n    private usage_counts: Map<Role, Map<Person, number>>;\n\n    // This is the schedule, as it's being built\n    private dates: Map<string, ScheduleAtDate>;\n    private decision_depth: number;\n\n    private logger: Logger;\n\n    constructor(people: PeopleStore, roles: RolesStore) {\n        this.people = people;\n        this.roles = roles;\n        this.begin();\n\n        this.exclusion_zones = new Map<Person, Array<Exclusion>>();\n        this.usage_counts = new Map<Role, Map<Person, number>>();\n\n        this.logger = LoggingWrapper.getLogger(\"scheduler.rules.facts\");\n    }\n\n    copyUsageDataFrom(previous_facts: RuleFacts) {\n        this.usage_counts = new Map<Role, Map<Person, number>>();\n        for (let person of Array.from(previous_facts.exclusion_zones.keys())) {\n            let zones = previous_facts.exclusion_zones.get(person);\n            this.exclusion_zones.set(person, zones);\n        }\n\n        for (let key of Array.from(previous_facts.usage_counts.keys())) {\n            let usage_count = previous_facts.usage_counts.get(key);\n            this.usage_counts.set(key, usage_count);\n        }\n    }\n\n    get schedule_dates(): Array<ScheduleAtDate> {\n        return Array.from(this.dates.values());\n    }\n\n    exec_sub_decision(callback) {\n        this.decision_depth++;\n        try {\n            callback();\n        } finally {\n            this.decision_depth--;\n        }\n    }\n\n    get_schedule_for_date(date: Date): ScheduleAtDate {\n        if (isUndefined(date)) {\n            this.logger.error(\"Cannot return a schedule for a null date\");\n            return null;\n        }\n        let dateAtHour = dayAndHourForDate(date);\n        let schedule = this.dates.get(dateAtHour);\n        if (schedule == null) {\n            this.logger.info(\"Create new schedule for \" + dateAtHour);\n            schedule = new ScheduleAtDate(date);\n            this.dates.set(dateAtHour, schedule);\n            return schedule;\n        } else {\n            // this.logger.info(\"Reuse schedule for \" + dateAtHour + \" = \" + date);\n            return schedule;\n        }\n    }\n\n    begin() {\n        // This is all PickRules, for all roles\n        this.all_pick_rules = this.roles.pick_rules(this.people);\n        this.decision_depth = 0;\n        // this.logPickRules();\n\n        this.all_role_rules = this.roles.role_rules(this.people);\n        this.dates = new Map<string, ScheduleAtDate>();\n    }\n\n    // private logPickRules() {\n    //     this.logger.info(\"Pick rules:\");\n    //     this.all_pick_rules.forEach((list, role) => {\n    //         this.logger.info(\" - \" + role.name);\n    //         list.forEach(r => {\n    //             this.logger.info(\" --- \" + r.constructor.name + \" = \" + JSON.stringify(r));\n    //         })\n    //     });\n    // }\n\n    begin_new_role_group(role_group: Array<Role>) {\n    }\n\n    begin_new_role(date: Date) {\n        this.current_date = date;\n        this.decisions_for_date = [];\n    }\n\n    add_decision(text: string, log: boolean = true) {\n        if (!text) {\n            return;\n        }\n        text = \"--- \".repeat(this.decision_depth) + text;\n        if (log) {\n            this.logger.debug(text);\n        }\n        if (!this.decisions_for_date) {\n            this.decisions_for_date = [];\n        }\n        this.decisions_for_date.push(text);\n    }\n\n    has_exclusion_for(date: Date, person: Person, role: Role): any[] {\n        // Is this person unavailable on this date?\n        if (person.is_unavailable_on(date)) {\n            return [true, \"unavailable\"];\n        }\n\n        // Is this person excluded for this date?\n        let exclusions_for_person = this.exclusion_zones.get(person);\n        if (!exclusions_for_person) {\n            return [false, \"no exclusions for \" + person.name];\n        }\n\n        // Does the exclusion zone for this person overlap with any existing?\n        let availability = person.prefs.availability;\n        let end_date = availability.get_end_date_from(date);\n        let new_exclusion = new Exclusion(date, end_date, role);\n\n        for (let exclusion of exclusions_for_person) {\n            if (exclusion.overlap_with(new_exclusion)) {\n                return [true, \"overlap with existing \" + exclusion];\n            }\n        }\n        return [false, \"clear!\"];\n    }\n\n    get_next_suitable_person_for(role: Role): Person {\n        // runs the pick rules for this role\n        let pick_rules = this.all_pick_rules.get(role);\n        if (!pick_rules) {\n            return null;\n        }\n        for (let rule of pick_rules) {\n            // this.logger.info(\"Using rule \" + rule.constructor.name + \", \" + JSON.stringify(rule) + \" next...\");\n            if (rule instanceof OnThisDate) {\n                let result = rule.execute(this);\n                if (result) return result;\n            }\n            if (rule instanceof UsageWeightedSequential) {\n                let people = rule.execute(this, role);\n                if (people.length) {\n                    for (let possible_person of people) {\n                        // can't already be in the role on this date\n                        let [has_exclusion, reason] = this.has_exclusion_for(this.current_date, possible_person, role);\n                        if (has_exclusion) {\n\n                            this.add_decision(possible_person.name + \" cant do it, they have an exclusion: \" + reason);\n                            continue;\n                        }\n\n                        // Must be available\n                        if (!this.is_person_available(possible_person, this.current_date, true)) {\n                            // No need to add decision. This will be done automatically.\n                            continue;\n                        }\n\n                        return possible_person;\n                    }\n                }\n                return null;\n            }\n        }\n    }\n\n    get_next_suitable_role_for_person(person: Person) {\n        let role_rules = this.all_role_rules.get(person);\n        if (!role_rules) {\n            return null;\n        }\n        for (let rule of role_rules) {\n            if (rule instanceof FixedRoleOnDate) {\n                let result = rule.execute(this);\n                if (result) return result;\n            }\n            if (rule instanceof WeightedRoles) {\n                let result = rule.execute(this, person);\n                return result[0];\n            }\n        }\n        return null;\n    }\n\n    private get_person_count_for_role(role: Role, person: Person): Map<Person, number> {\n        if (role == null) {\n            throw new Error(\"Role cannot be null here\");\n        }\n        if (person == null) {\n            throw new Error(\"Person cannot be null here\");\n        }\n        if (!this.usage_counts.has(role)) {\n            this.logger.debug(\"Creating new role counter for \" + role.name);\n            let new_count = new Map<Person, number>();\n            this.usage_counts.set(role, new_count);\n        }\n\n        let by_person = this.usage_counts.get(role);\n        if (!by_person.has(person)) {\n            this.logger.info(\"Starting count at 0 for \" + person.name);\n            by_person.set(person, 0);\n        }\n        return by_person;\n    }\n\n    number_of_times_role_used_by_person(role: Role, person: Person): number {\n        if (role == null) {\n            throw new Error(\"Role cannot be null here\");\n        }\n        if (person == null) {\n            throw new Error(\"Person cannot be null here\");\n        }\n        return this.get_person_count_for_role(role, person).get(person);\n    }\n\n    total_number_of_times_person_placed_in_roles(person: Person, roles: Array<Role>): number {\n        let total = 0;\n        for (let role of roles) {\n            let person_counter_for_role = this.get_person_count_for_role(role, person);\n            total = total + person_counter_for_role.get(person);\n        }\n        return total;\n    }\n\n    is_person_available(person: Person, date: Date, record_unavailability: boolean = false) {\n        throwOnInvalidDate(date);\n        if (person.is_unavailable_on(date)) {\n            return false;\n        }\n\n        // Check for specific availability based on past placements\n        return person.is_available(date, this, record_unavailability);\n    }\n\n    placements_for_person(person: Person, start_date: Date, end_date: Date) {\n        let facts = this.filter(start_date, end_date);\n        // this.logger.info(\" - facts: \" + JSON.stringify(facts));\n        return facts.filter(fact => fact.includes_person(person));\n    }\n\n    index_of_person_in_role_group(person: Person, role: Role) {\n        return 0;\n    }\n\n    use_this_person_in_role(person: Person, role: Role) {\n        let person_counter = this.get_person_count_for_role(role, person);\n        let current_count = person_counter.get(person);\n        person_counter.set(person, (current_count + 1));\n        // this.logger.info(\"Up to \" + person_counter.get(person));\n    }\n\n    add_exclusion_for(person: Person, role: Role, date: Date) {\n        let exclusions_for_person = this.exclusion_zones.get(person);\n        if (!exclusions_for_person) {\n            exclusions_for_person = [];\n        }\n\n        // make the exclusion\n        let availability = person.prefs.availability;\n        let end_date = availability.get_end_date_from(date);\n\n        let exclusion = new Exclusion(date, end_date, role);\n        exclusions_for_person.push(exclusion);\n        this.add_decision(\"Recorded exclusion for \" + person.name + \", \" + role.name + \" for \" + Math.floor(exclusion.duration_in_days) + \" days\");\n        this.exclusion_zones.set(person, exclusions_for_person);\n    }\n\n    is_person_in_exclusion_zone(person: Person, role: Role, date_for_row: Date) {\n        let exclusion_zones = this.exclusion_zones.get(person);\n        if (!exclusion_zones) {\n            return false;\n        }\n\n        // lets find those zones relating directly to this role\n        let zones_matching_role = exclusion_zones.filter(z => z.role.uuid == role.uuid);\n        if (!zones_matching_role.length) {\n            return false;\n        }\n\n        let containining_this_date = zones_matching_role.filter(z => z.includes_date(date_for_row));\n        return containining_this_date.length > 0;\n    }\n\n    place_person_in_role(person: Person,\n                         role: Role,\n                         date: Date,\n                         record_usage_stats = true,\n                         execute_conditionals = true,\n                         decision_override: string = null): boolean {\n        let specific_day = this.get_schedule_for_date(date);\n\n        if (!specific_day.can_place_person_in_role(person, role)) {\n            return false;\n        }\n\n        this.add_exclusion_for(person, role, date);\n        specific_day.add_person(person, role);\n        this.add_decision(decision_override == null ? \"Placing \" + person.name + \" into \" + role : decision_override);\n\n        if (record_usage_stats) {\n            this.use_this_person_in_role(person, role);\n        }\n\n        // Execute any conditional actions on the person\n        if (execute_conditionals) {\n            person.conditional_rules.forEach(r => {\n                this.exec_sub_decision(() => {\n                    r.run(this, person, role);\n                });\n            });\n        }\n        return true;\n    }\n\n    set_decisions_for(person: Person, role: Role, date: Date, clear_decisions: boolean = true) {\n        let specific_day = this.get_schedule_for_date(date);\n        specific_day.set_decisions(person, role, this.decisions_for_date);\n        if (clear_decisions) {\n            this.clear_decisions();\n        }\n    }\n\n    clear_decisions() {\n        this.decisions_for_date = [];\n    }\n\n    filter(start_date: Date, end_date: Date) {\n        return Array.from(this.dates.values()).filter((schedule) => {\n            return schedule.date >= start_date && schedule.date <= end_date;\n        }).sort((s1, s2) => {\n            return s1.date > s2.date ? 1 : (s1.date < s2.date ? -1 : 0);\n        });\n    }\n\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/scheduling/rule_based/rule-facts.ts","import {Component} from '@angular/core';\nimport includes from 'lodash/includes';\nimport {ScheduleWithRules} from \"../../scheduling/rule_based/scheduler\";\nimport {computed} from \"mobx\";\nimport {Person} from \"../../scheduling/people\";\nimport {RootStore} from \"../../store/root\";\nimport {UIStore} from \"../../store/UIState\";\n\n@Component({\n    // changeDetection: ChangeDetectionStrategy.OnPush,\n    selector: 'person-editor',\n    templateUrl: 'person-editor.html'\n})\nexport class PersonEditorComponent {\n    constructor(private store: RootStore) {\n    }\n\n    @computed\n    get schedule(): ScheduleWithRules {\n        return this.store.schedule;\n    }\n\n    @computed\n    get ui(): UIStore {\n        return this.store.ui_store;\n    }\n\n    @computed\n    get person(): Person {\n        return this.store.ui_store.selected_person;\n    }\n\n    scheduled_dates() {\n        // Find a list of schedules for this person\n        return Array.from(this.schedule.dates.values()).filter(v => {\n            return includes(v.people, this.ui.selected_person);\n        });\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/person-editor/person-editor.ts","import {action, observable} from \"mobx\";\nimport {PeopleStore, Person} from \"../people\";\nimport {OnThisDate, Rule, UsageWeightedSequential} from \"../rule_based/rules\";\nimport {BaseStore, ObjectWithUUID} from \"../common/base_model\";\nimport {isUndefined} from \"ionic-angular/util/util\";\n\nexport class Role extends ObjectWithUUID {\n    @observable name: string;\n    @observable maximum_count: number;\n    @observable layout_priority: number;\n\n    constructor(name: string, priority: number = 0, max_in_role: number = 1) {\n        super();\n        this.name = name;\n        this.maximum_count = max_in_role;\n        this.layout_priority = priority;\n    }\n\n    valueOf() {\n        return \"[\" + this.name + \"]\";\n    }\n}\n\nlet speakerPriority = 12;\nlet leaderPriority = 11;\nlet soundPriority = 10; // 10\nlet instrumentPriority = 10;\n\nlet defaultSpeakerRole = new Role(\"Speaker\", speakerPriority);\nlet defaultThemeRole = new Role(\"Theme\", speakerPriority);\nlet defaultLeaderRole = new Role(\"Worship Leader\", leaderPriority);\n\nlet defaultSoundRole = new Role(\"Sound\", soundPriority);\nlet defaultComputerRole = new Role(\"Computer\", soundPriority);\n\nlet defaultBass = new Role(\"Bass\", instrumentPriority);\nlet defaultDrumsRole = new Role(\"Drums\", instrumentPriority);\nlet defaultKeysRole = new Role(\"Keys\", instrumentPriority);\nlet defaultAcousticGuitar = new Role(\"Guitar (Acoustic)\", instrumentPriority);\nlet defaultElectricGuitar = new Role(\"Guitar (Electric)\", instrumentPriority);\n\nlet defaultVocalsRole = new Role(\"Vocals\", instrumentPriority);\nlet defaultSaxRole = new Role(\"Sax\", instrumentPriority);\n\ndefaultAcousticGuitar.maximum_count = 2;\ndefaultVocalsRole.maximum_count = 3;\n\nexport class RolesStore extends BaseStore<Role> {\n    @observable rules: Array<Rule>;\n\n    constructor() {\n        super();\n        this.rules = [];\n        this.add_objects_to_array([\n            // defaultSpeakerRole,\n            // defaultThemeRole,\n            defaultLeaderRole,\n            defaultSoundRole,\n            defaultComputerRole,\n            defaultKeysRole,\n            defaultVocalsRole,\n            defaultDrumsRole,\n            defaultBass,\n            defaultAcousticGuitar,\n            defaultElectricGuitar,\n            defaultSaxRole\n        ]);\n    }\n\n    get roles(): Array<Role> {\n        return this.items;\n    }\n\n    @action\n    removeAllRoles() {\n        this.clear_all_objects_from_array();\n    }\n\n    @action\n    addRole(r: Role): Role {\n        return this.add_object_to_array(r);\n    }\n\n    @action\n    addRoles(roles: Array<Role>) {\n        this.add_objects_to_array(roles);\n    }\n\n    @action\n    removeRole(r: Role) {\n        this.remove_object_from_array(r);\n    }\n\n    get roles_in_layout_order_grouped(): Array<Array<Role>> {\n        // Add all roles into a map\n        let roles_in_order = this.roles_in_layout_order;\n        let intermediate = new Map<number, Array<Role>>();\n        for (let role of roles_in_order) {\n            if (!intermediate.has(role.layout_priority)) {\n                intermediate.set(role.layout_priority, []);\n            }\n            intermediate.set(role.layout_priority, [...intermediate.get(role.layout_priority), role]);\n        }\n\n        // Turn into an array\n        let result = [];\n        intermediate.forEach((list, key: number) => {\n            result.push(list);\n        });\n        return result;\n    }\n\n    get roles_in_layout_order(): Array<Role> {\n        return this.roles.sort((a: Role, b: Role) => {\n            if (a.layout_priority < b.layout_priority) {\n                return 1;\n            } else if (a.layout_priority > b.layout_priority) {\n                return -1;\n            }\n            return 0;\n        });\n    }\n\n    find_role(role_name: string) {\n        if(isUndefined(role_name)) {\n            return null;\n        }\n        for (let role of this.roles) {\n            if (role.name.toLowerCase() == role_name.toLowerCase()) {\n                return role;\n            }\n        }\n        return null;\n    }\n\n    pick_rules(people_store: PeopleStore): Map<Role, Array<Rule>> {\n        let rule_map = new Map<Role, Array<Rule>>();\n        for (let role of this.roles_in_layout_order) {\n            let rules = [];\n\n            // Find any specific rules for this date.\n            rules = rules.concat(this.rules_for_role(role));\n\n            // Ordering people sequentially\n            let uws = new UsageWeightedSequential(people_store.people_with_role(role));\n            rules.push(uws);\n\n            rule_map.set(role, rules);\n        }\n        return rule_map;\n    }\n\n    role_rules(people_store: PeopleStore): Map<Person, Array<Rule>> {\n        let rule_map = new Map<Person, Array<Rule>>();\n        for (let person of people_store.people) {\n            rule_map.set(person, person.role_rules());\n        }\n        return rule_map;\n    }\n\n    addPickRule(rule: Rule) {\n        /*\n        When putting rules together, user specified pick rules must come before the\n        UWS rules when executing. So we make sure they have a higher priority.\n        */\n        rule.priority = 10;\n        this.rules.push(rule);\n        // console.log(\"Rules now \" + JSON.stringify(this.rules));\n    }\n\n    private rules_for_role(role: Role) {\n        return this.rules.filter(r => {\n            if (r instanceof OnThisDate) {\n                return r.role.uuid == role.uuid;\n            }\n            return false;\n        });\n    }\n}\n\nexport {\n    defaultSpeakerRole,\n    defaultThemeRole,\n    defaultLeaderRole,\n    defaultSoundRole,\n    defaultDrumsRole,\n    defaultVocalsRole,\n    defaultComputerRole,\n    defaultKeysRole,\n    defaultAcousticGuitar,\n    defaultElectricGuitar,\n    defaultBass,\n    defaultSaxRole\n}\n\n\n// WEBPACK FOOTER //\n// ./src/scheduling/tests/roles.ts","import {AppModule} from \"../app/app.module\";\nimport {Logger, LoggingService} from \"ionic-logging-service\";\nimport {MockConfigurationService} from \"../app/logging-configuration\";\n\nexport class LoggingWrapper {\n    static loggingService: LoggingService;\n\n    static getLogger(name: string): Logger {\n        if (AppModule.injector) {\n            return AppModule.injector.get(LoggingService).getLogger(name);\n        } else {\n            if (!this.loggingService) {\n                let config = new MockConfigurationService(null);\n                config.setVars({\n                    \"logging\": {\n                        \"logLevels\": [\n                            {\n                                \"loggerName\": \"root\",\n                                \"logLevel\": \"INFO\"\n                            }\n                        ]\n                    }\n                });\n                this.loggingService = new LoggingService(config);\n            }\n            // console.log(\"oBeTruthy()re instantiation in the hope it all works\");\n            return this.loggingService.getLogger(name);\n        }\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/common/logging-wrapper.ts","import {Component, Input} from '@angular/core';\nimport {FormGroup} from \"@angular/forms\";\nimport * as to from \"to-case\";\n\n@Component({\n    selector: 'show-form-errors',\n    templateUrl: 'show-form-errors.html'\n})\nexport class ShowFormErrorsComponent {\n    @Input() control: FormGroup;\n\n    private errorMessages = {\n        'required': (name) => `${name} is required`,\n        'email': (name) => `${name} should be a valid email address`,\n        'minlength': (name, params) => `${name} should be at least ${params.requiredLength} characters`,\n        'maxlength': (name, params) => `${name} should be at most ${params.requiredLength} characters`,\n        'pattern': (name, params) => `The required pattern is: ${params.requiredPattern}`,\n    };\n\n    constructor() {\n    }\n\n    public addMessage(type: string, callback: object) {\n        this.errorMessages[type] = callback;\n    }\n\n    get showErrors(): boolean | null {\n        // console.log(`Invalid: ${this.control.invalid}, Dirty: ${this.control.dirty}, Touched: ${this.control.touched}`);\n        return this.errors.length > 0 && (this.control.dirty || this.control.touched);\n    }\n\n    get errors(): string[] {\n        let errors: Array<string> = [];\n        for (let fieldName of Object.keys(this.control.controls)) {\n            let ctrl = this.control.get(fieldName);\n            if (ctrl && ctrl.invalid) {\n                if (ctrl.errors) {\n                    // console.log(fieldName + \" has errors: \" + JSON.stringify(ctrl.errors));\n                    for (let errorType of Object.keys(ctrl.errors)) {\n                        let theError = ctrl.errors[errorType];\n                        let message = this.getMessage(fieldName, errorType, theError);\n                        // console.log(\"Add \" + message + \" for \" + fieldName + \"/\" + errorType);\n                        errors.push(message)\n                    }\n                }\n            }\n        }\n        // console.log(`Errors: ${errors}`);\n        return errors;\n    }\n\n    private getMessage(fieldName: string, type: string, params: any): string {\n        fieldName = to.capital(fieldName);\n        if (this.errorMessages[type]) {\n            // console.log(`Calling func for ${type}`);\n            return this.errorMessages[type](fieldName, params);\n        }\n        return params.message;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/show-form-errors/show-form-errors.ts","import json2csv from \"json2csv\";\nimport fileSaver from \"file-saver\";\nimport {ScheduleWithRules} from \"../rule_based/scheduler\";\nimport * as _ from 'lodash';\n\nclass CSVExporter {\n    private schedule: ScheduleWithRules;\n\n    constructor(schedule: ScheduleWithRules) {\n        this.schedule = schedule;\n    }\n\n    valueOf() {\n        let {fields, rows} = this.generate_rows();\n        return json2csv({\n            data: rows,\n            fields: fields\n        });\n    }\n\n    generate_rows() {\n        let fields = this.schedule.jsonFields();\n        let rows = this.schedule.jsonResult().map(row => {\n            // Want to remap this structure\n            let new_row = {\n                Date: row.date.toDateString()\n            };\n            for (let field of fields) {\n                if (field == 'Date') continue;\n                let all_names = _.map(row[field], p => p.name);\n                new_row[field] = _.join(all_names, \", \");\n            }\n            return new_row;\n        });\n        return {\n            fields: fields,\n            rows: rows\n        }\n    }\n\n    write_to_file(filename: string) {\n        let {fields, rows} = this.generate_rows();\n        let result = json2csv({\n            data: rows,\n            fields: fields\n        });\n\n        let data = new Blob([result], {type: 'text/csv'});\n        fileSaver.saveAs(data, filename);\n    }\n}\n\nexport {\n    CSVExporter\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/scheduling/exporter/csv.exporter.ts","const DISCOVERY_DOCS = [\"https://sheets.googleapis.com/$discovery/rest?version=v4\"];\nconst SCOPES = [\n    \"https://www.googleapis.com/auth/spreadsheets\",\n    \"https://www.googleapis.com/auth/drive\"\n];\n\nlet credentials = {\n    \"installed\":\n        {\n            \"client_id\": \"323446159269-e3nf5h9l69uvbcmnm0ve8vfd03das5vq.apps.googleusercontent.com\",\n            \"project_id\": \"role-scheduler\",\n            \"auth_uri\": \"https://accounts.google.com/o/oauth2/auth\",\n            \"token_uri\": \"https://accounts.google.com/o/oauth2/token\",\n            \"auth_provider_x509_cert_url\": \"https://www.googleapis.com/oauth2/v1/certs\",\n            \"client_secret\": \"I5yPbU_NU2l43lqFatO-g_gu\",\n            \"javascript_origins\": [\n                \"http://localhost:8000\"\n            ]\n        }\n};\n\nexport {\n    credentials,\n    SCOPES,\n    DISCOVERY_DOCS\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/common/auth-common.ts","export interface ValidationResponse {\n    user?: string,\n    ok: boolean,\n    reason: string\n}\n\nexport class LoginResponse implements ValidationResponse {\n    user?: string;\n    ok: boolean;\n    reason: string;\n\n    constructor(ok: boolean = true, reason: string = \"\", user: string = null) {\n        this.ok = ok;\n        this.reason = reason;\n        this.user = user;\n    }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// ./src/common/interfaces.ts","import {parseDateFromSpreadsheetDate, parseMomentDateFromSpreadsheetDate} from \"../scheduling/common/date-utils\";\nimport {isDefined, isUndefined} from \"ionic-angular/util/util\";\nimport {ScheduleWithRules} from \"../scheduling/rule_based/scheduler\";\nimport * as moment from \"moment\";\nimport {Moment} from \"moment\";\nimport {ScheduleInput} from \"../scheduling/common\";\nimport {Logger} from \"ionic-logging-service\";\nimport {NPBCStoreConstruction} from \"../providers/store/test.store\";\nimport {OrganizationStore} from \"../scheduling/organization\";\nimport {LoggingWrapper} from \"./logging-wrapper\";\n\nexport class SpreadsheetReader {\n    problems: Map<string, Set<string>>;\n    schedule: ScheduleWithRules;\n    private logger: Logger;\n\n    constructor() {\n        this.problems = new Map<string, Set<string>>();\n        this.logger = LoggingWrapper.getLogger(\"spreadsheet.reader\");\n    }\n\n    parse_schedule_from_spreadsheet(rowData: Array<any>) {\n        // OK, we will preload a schedule using a previous schedule\n        // To do this we need to derive the start and end date (so it's duration is valid)\n        let input = new ScheduleInput();\n        NPBCStoreConstruction.SetupStore(input.people, new OrganizationStore());\n\n        this.logger.info(\"Parsing schedule...\");\n        // First, we validate we have the expected column names\n        let column_names = rowData[0];\n        if (\"Date\" in column_names) {\n            throw new Error(\"No date!\");\n        }\n\n        let dataRows = rowData.slice(1);\n        let allDates = dataRows\n            .map<Moment>(v => parseMomentDateFromSpreadsheetDate(v[0]))\n            .filter(v => moment(v).isValid());\n\n        // let min_date = allDates.reduce((prev, currentValue) => prev && prev.isBefore(currentValue) ? prev : currentValue);\n        // let max_date = allDates.reduce((prev, currentValue) => prev && prev.isAfter(currentValue) ? prev : currentValue);\n        let min_date: Moment = allDates[0];\n        let max_date: Moment = allDates[allDates.length - 1];\n\n        input.start_date = min_date.toDate();\n        input.end_date = max_date.toDate();\n        // this.logger.info(`Starting ${input.start_date} and ending ${input.end_date}`);\n\n        this.schedule = new ScheduleWithRules(input);\n\n        // Now we read each row and add people into various roles/positions\n        let roles_store = input.roles;\n        let people_store = input.people;\n\n        for (let row of dataRows) {\n            // Iterate all the roles that we know of\n            let current_date = null;\n            let facts = this.schedule.facts;\n            let for_this_date = facts.get_schedule_for_date(current_date);\n\n            row.forEach((col, index) => {\n                if (index == 0) {\n                    if (isDefined(col) && col.toString().length > 0) {\n                        current_date = parseDateFromSpreadsheetDate(col);\n                    } else {\n                        current_date = null;\n                    }\n                    return;\n                }\n\n                // Check we have a valid date for this row\n                if (!current_date) {\n                    return;\n                }\n\n                // Dump out logging only if we're going to process this row\n                if (index == 0) {\n                    this.logger.info(\"Process: \" + col);\n                }\n\n                // Lookup the role!\n                let role_name = column_names[index];\n                if (role_name) {\n                    let role = roles_store.find_role(role_name);\n                    if (role) {\n                        this.logger.info(` - Role: ${role}`);\n\n                        let peoples_names = col.split(\",\").map(v => v.trim());\n                        this.logger.info(`   - people: ${JSON.stringify(peoples_names)}`);\n\n                        if (for_this_date) {\n                            // Go through people and add them to this role\n                            for (let persons_name of peoples_names) {\n                                if (isUndefined(persons_name)) {\n                                    continue;\n                                }\n                                if(persons_name.length == 0) {\n                                    continue;\n                                }\n\n                                let person = people_store.find_person_with_name(persons_name, true);\n                                if (person == null) {\n                                    this.add_problem(\"person\", `cannot find ${persons_name}`);\n                                } else {\n                                    this.schedule.facts.place_person_in_role(person, role, current_date, true, false);\n                                    // for_this_date.add_person(person, role);\n                                }\n                            }\n                        }\n                    }\n                }\n            });\n        }\n    }\n\n    get has_problems(): boolean {\n        return this.problems.size > 0;\n    }\n\n    private add_problem(key: string, problem_description: string) {\n        let array_of_things = this.problems.get(key);\n        if (!array_of_things) {\n            // noinspection JSPrimitiveTypeWrapperUsage\n            array_of_things = new Set<string>();\n            this.problems.set(key, array_of_things);\n        }\n        array_of_things.add(problem_description);\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/common/spreadsheet_reader.ts","import {Component} from '@angular/core';\nimport {AlertController, IonicPage, Loading, LoadingController, NavController} from 'ionic-angular';\nimport {FormBuilder, FormGroup, Validators} from \"@angular/forms\";\nimport {ServerProvider} from \"../../providers/server/server\";\nimport {ValidationResponse} from \"../../common/interfaces\";\n\nclass AbstractLoginPage {\n    loginForm: FormGroup;\n    loading: Loading;\n\n    username_usability: string;\n    registration_password: string;\n    registration_error: string;\n\n    private _registration_username: string;\n\n    constructor(protected nav: NavController,\n                protected alertCtrl: AlertController,\n                protected server: ServerProvider,\n                protected loadingCtrl: LoadingController) {\n    }\n\n    get registration_username(): string {\n        return this._registration_username;\n    }\n\n    async set_registration_username(value: string, check_usability: boolean = false) {\n        this._registration_username = value;\n\n        // kick off validation\n        if(this.registration_error) {\n            this.registration_error = \"\";\n        }\n\n        if (check_usability) {\n            try {\n                this.username_usability = await this.server.isUsernameAvailableAndGood(this._registration_username).toPromise();\n            } catch(e) {\n                this.registration_error = JSON.stringify(e);\n            }\n\n        }\n    }\n\n    showPopup(title, subtitle, buttonText = \"OK\", handler = (data) => {\n    }) {\n        let options = {\n            title: title,\n            subTitle: subtitle,\n        };\n        if (buttonText.length) {\n            options['buttons'] = [\n                {\n                    text: buttonText,\n                    handler: handler\n                }\n            ];\n        }\n        let alert = this.alertCtrl.create(options);\n        alert.present();\n        return alert;\n    }\n\n    showLoading() {\n        this.loading = this.loadingCtrl.create({\n            content: 'Please wait [login]...',\n            dismissOnPageChange: true\n        });\n        this.loading.present();\n    }\n\n    showError(text) {\n        this.loading.dismiss();\n\n        let alert = this.alertCtrl.create({\n            title: 'Opps!',\n            subTitle: text,\n            buttons: ['OK']\n        });\n        alert.present(prompt);\n    }\n\n    // setupTestUser(users: IPersonStore, deleteUser = false): any {\n    //     try {\n    //         users.clearRegistrationState();\n    //         users.setRegistrationUsername(\"neil@cloudnine.net.nz\");\n    //         users.setRegistrationPassword(\"testing59\");\n    //         if (deleteUser) {\n    //             users.deletePerson(\"neil@cloudnine.net.nz\");\n    //         }\n    //     } catch (error) {\n    //         console.log(error);\n    //     }\n    // }\n}\n\n@IonicPage({\n    defaultHistory: ['home'],\n    name: 'login'\n})\n@Component({\n    selector: 'page-login',\n    templateUrl: 'login.html',\n})\nexport class LoginPage extends AbstractLoginPage {\n    constructor(protected nav: NavController,\n                protected alert: AlertController,\n                protected server: ServerProvider,\n                loading: LoadingController,\n                private formBuilder: FormBuilder,) {\n        super(nav, alert, server, loading);\n        this.loginForm = this.formBuilder.group({\n            'email': [\"\", [Validators.email, Validators.required]],\n            'password': [\"\", [Validators.required, Validators.minLength(8)]],\n        });\n    }\n\n    ngAfterViewInit() {\n        // For debug/testing\n        // this.createAccount();\n        // this.setupTestUser(this.store.s.users);\n    }\n\n    public createAccount() {\n        // this.nav.push('RegisterPage');\n    }\n\n    public login() {\n        this.showLoading();\n        let username = this.registration_username;\n\n        // let password = this.registration_password;\n        let password = this.loginForm.get('password').value;\n        console.log(`Starting login... using ${username} and ${password}`);\n        this.server.loginUser(username, password).subscribe(({user, ok, reason}) => {\n            console.log(`Login completed ${ok}: ${reason}`);\n            if (user == null) {\n                this.showError(reason);\n            } else {\n                // Using this rather that this.nav.pop(), so it works\n                // when the page is hit directly as a deep link\n                this.nav.setRoot('home')\n            }\n        }, (error) => {\n            console.error(error);\n            this.showError(error);\n        });\n    }\n\n}\n\nexport {\n    AbstractLoginPage\n}\n\n\n// WEBPACK FOOTER //\n// ./src/pages/login/login.ts","import {Component} from '@angular/core';\nimport {Platform} from 'ionic-angular';\nimport {StatusBar} from '@ionic-native/status-bar';\nimport {SplashScreen} from '@ionic-native/splash-screen';\n\n// import {TabsPage} from '../pages/tabs/tabs';\n\n@Component({\n    templateUrl: 'app.html'\n})\nexport class MyApp {\n    rootPage: any = 'login';\n\n    constructor(platform: Platform, statusBar: StatusBar, splashScreen: SplashScreen) {\n        platform.ready().then(() => {\n            // Okay, so the platform is ready and our plugins are available.\n            // Here you can do any higher level native things you might need.\n            statusBar.styleDefault();\n            splashScreen.hide();\n        });\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import {Component} from '@angular/core';\n\nimport {AboutPage} from '../about/about';\nimport {HomePage} from '../home/home';\nimport {PeoplePage} from \"../people/people\";\n\n@Component({\n    templateUrl: 'tabs.html'\n})\nexport class TabsPage {\n\n    tab1Root = HomePage;\n    tab2Root = PeoplePage;\n    tab3Root = AboutPage;\n\n    constructor() {\n\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/tabs/tabs.ts","import * as _ from 'lodash';\nimport {Role} from \"../tests/roles\";\nimport {Person} from \"../people\";\nimport {Logger} from \"ionic-logging-service\";\nimport {RuleFacts} from \"./rule-facts\";\nimport {LoggingWrapper} from \"../../common/logging-wrapper\";\nimport {Availability} from \"../tests/scheduling-types\";\nimport {daysBetween, ScheduleAtDate} from \"../common\";\nimport {ScheduleWithRules} from \"./scheduler\";\n\nclass RuleExecution {\n    object: any;\n    trigger: Rule;\n\n    private logger: Logger;\n\n    constructor(obj, trigger: Rule) {\n        this.object = obj;\n        this.trigger = trigger;\n        this.logger = LoggingWrapper.getLogger(\"scheduler.rules\");\n    }\n\n    get empty(): boolean {\n        return this.object == null && this.trigger == null;\n    }\n\n    public static EMPTY() {\n        return new RuleExecution(null, null);\n    }\n}\n\nclass Rule {\n    priority: number;\n\n    constructor(priority: number = 0) {\n        this.priority = priority;\n    }\n}\n\nclass FixedRoleOnDate extends Rule {\n    date: Date;\n    role: Role;\n\n    constructor(date: Date, r: Role, priority = 0) {\n        super(priority);\n        this.date = date;\n        this.role = r;\n    }\n\n    execute(state: RuleFacts): Role {\n        if (this.date == state.current_date) {\n            return this.role;\n        }\n        return null;\n    }\n}\n\nclass WeightedRoles extends Rule {\n    weightedRoles: Map<Role, number>;\n\n    constructor(weightedRules: Map<Role, number>) {\n        super();\n        this.weightedRoles = weightedRules;\n        this.normalize_weights();\n    }\n\n    get roles_sorted_by_weight(): Array<Role> {\n        return _.sortBy(Array.from(this.weightedRoles.keys()), (o) => {\n            return this.weightedRoles.get(o);\n        });\n    }\n\n    execute(state: RuleFacts, person: Person): Array<Role> {\n        // sort by current score, highest first.\n        let roles_in_weight_order = this.roles_sorted_by_weight;\n\n        let roles = Array.from(this.weightedRoles.keys());\n        let total_usages = state.total_number_of_times_person_placed_in_roles(person, roles);\n        if (total_usages == 0) {\n            return roles_in_weight_order;\n        }\n\n        // Sort based on realtime score\n        return _.sortBy(roles_in_weight_order, role => {\n            let role_weighting = this.weightedRoles.get(role);\n\n            let current_score = state.number_of_times_role_used_by_person(role, person);\n            let runtime_weighting = current_score / total_usages;\n            // this.logger.info(role.name + \", weight: \" + role_weighting + \". Has score: \" + current_score + \". Runtime weight: \" + runtime_weighting);\n\n            if (runtime_weighting < role_weighting) {\n                return -1;\n            } else if (runtime_weighting > role_weighting) {\n                return 1;\n            }\n            return 0;\n        });\n    }\n\n    private normalize_weights() {\n        let total_weight: number = _.sum(Array.from(this.weightedRoles.values()));\n        // this.logger.info(\"Total weights: \" + total_weight);\n        this.weightedRoles.forEach((num, key) => {\n            this.weightedRoles.set(key, num / total_weight);\n        });\n    }\n}\n\nclass OnThisDate extends Rule {\n    role: Role;\n    date: Date;\n    person: Person;\n\n    constructor(date: Date, person: Person, role: Role, priority: number = 0) {\n        super(priority);\n        this.date = date;\n        this.role = role;\n        this.person = person;\n    }\n\n    execute(state: RuleFacts): Person {\n        let hasPrimaryRole = this.person.has_primary_role(this.role);\n        if (state.current_date == this.date && hasPrimaryRole) {\n            return this.person;\n        }\n        return null;\n    }\n}\n\nclass UsageWeightedSequential extends Rule {\n    private usages: Map<Person, number>;\n    private original_index: Map<Person, number>;\n\n    constructor(people: Array<Person>, priority: number = 0) {\n        super(priority);\n        this.usages = new Map<Person, number>();\n        this.original_index = new Map<Person, number>();\n\n        people.forEach((p, index) => {\n            this.usages.set(p, 0);\n            this.original_index.set(p, index);\n        });\n    }\n\n    execute(state: RuleFacts, role: Role): Array<Person> {\n        // Sort by number\n        return Array.from(this.usages.keys()).sort((p1: Person, p2: Person) => {\n            let usageForP1 = state.number_of_times_role_used_by_person(role, p1);\n            let usageForP2 = state.number_of_times_role_used_by_person(role, p2);\n            if (usageForP1 < usageForP2) {\n                return -1;\n            } else if (usageForP1 > usageForP2) {\n                return 1;\n            }\n\n            // Compare by index\n            let p1Index = state.index_of_person_in_role_group(p1, role);\n            let p2Index = state.index_of_person_in_role_group(p2, role);\n            if (p1Index < p2Index) {\n                return -1;\n            } else if (p1Index > p2Index) {\n                return 1;\n            }\n            return 0;\n        });\n    }\n}\n\nclass ConditionalRule extends Rule {\n    private actions: Array<ConditionAction>;\n\n    constructor() {\n        super();\n        this.actions = [];\n    }\n\n    condition(stat: RuleFacts, person: Person, role: Role) {\n        return false;\n    }\n\n    run(stat: RuleFacts, person: Person, role: Role) {\n        if (this.condition(stat, person, role)) {\n            _.sortBy(this.actions, o => o.priority).forEach(r => {\n                r.executeAction(stat, person, role);\n            });\n        }\n    }\n\n    then(action: ConditionAction) {\n        this.actions.push(action);\n    }\n}\n\nclass AssignedToRoleCondition extends ConditionalRule {\n    private role: Role;\n\n    constructor(role: Role) {\n        super();\n        this.role = role;\n    }\n\n    condition(stat: RuleFacts, person: Person, role: Role): boolean {\n        return this.role.uuid == role.uuid;\n    }\n}\n\nclass ConditionAction extends Rule {\n    executeAction(stat: RuleFacts, person: Person, role: Role) {\n    }\n}\n\nclass ScheduleOn extends ConditionAction {\n    private person: Person;\n    private role: Role;\n\n    constructor(person: Person, role: Role) {\n        super();\n        this.person = person;\n        this.role = role;\n    }\n\n    executeAction(stat: RuleFacts, person: Person, role: Role) {\n        if (stat.place_person_in_role(this.person, this.role, stat.current_date)) {\n            stat.add_decision(\"\" + this.constructor.name + \" executed, adding \" + this.person + \" to role \" + this.role);\n        } else {\n            stat.add_decision(`Couldn't place ${this.person} in role, the role is full`);\n        }\n    }\n}\n\nclass SecondaryAction extends Rule {\n    owner: Person;\n\n    execute(schedule_at_date: ScheduleAtDate, schedule: ScheduleWithRules) {\n\n    }\n}\n\nclass TryToScheduleWith extends SecondaryAction {\n    private other_person: Person;\n    private reach: Availability;\n    private max_number_of_times: number;\n    private success_executions: number = 0;\n\n    constructor(other_person: Person, reach: Availability, max_number = 99999) {\n        super();\n        this.other_person = other_person;\n        this.reach = reach;\n        this.max_number_of_times = max_number;\n    }\n\n\n    execute(schedule_at_date: ScheduleAtDate, schedule: ScheduleWithRules) {\n        // If this line includes a use of self, does it also include a use of the other person?\n        if (schedule_at_date.includes_person(this.owner)) {\n            if (!schedule_at_date.includes_person(this.other_person)) {\n                //\n                // TODO: mark somehow that this is a movement, and it shouldn't be reprocessed?\n                // Only because we might get into a situation where we move someone, only to move them again with the next rule\n                // or a secondary action for someone else\n\n                // Is there some place in the schedule where we could move the person, within the allowed threshold?\n                let closest = schedule.closest_schedule_date(schedule_at_date.date, (s): number | boolean => {\n                    // Not interested in the same one\n                    if (s == schedule_at_date) {\n                        return false;\n                    }\n                    // This SD must include the other person\n                    if (!s.includes_person(this.other_person)) {\n                        return false;\n                    }\n\n                    // It's not us, and it does contain the other person! Yay!\n                    return Math.abs(daysBetween(schedule_at_date.date, s.date));\n                });\n\n                if (closest && this.success_executions < this.max_number_of_times) {\n                    console.log(`We should try to move ${this.owner} because they are not on with ${this.other_person}`);\n                    console.log(` - Try to move them to ${closest.date.toDateString()}`);\n\n                    let reason = `Moved from ${schedule_at_date.date.toDateString()} to be with ${this.other_person.name}`;\n                    schedule_at_date.move_person(this.owner, closest, reason);\n\n                    this.success_executions++;\n                }\n            }\n        }\n    }\n}\n\nexport {\n    UsageWeightedSequential,\n    WeightedRoles,\n    FixedRoleOnDate,\n    OnThisDate,\n    AssignedToRoleCondition,\n    ConditionalRule,\n    ConditionAction,\n    ScheduleOn,\n    SecondaryAction,\n    TryToScheduleWith,\n    Rule\n}\n\n\n// WEBPACK FOOTER //\n// ./src/scheduling/rule_based/rules.ts","import {Role, RolesStore} from \"./tests/roles\";\nimport {PeopleStore, Person} from \"./people\";\nimport * as _ from 'lodash';\nimport {dayAndHourForDate} from \"./common/date-utils\";\n\nclass ScheduleScore {\n    person?: Person;\n    roles: Array<Role>;\n    decisions: Array<string>;\n    score: number;\n\n    constructor(role: Role) {\n        this.roles = [role];\n        this.score = 0;\n        this.decisions = [];\n    }\n\n    has_role(role: Role) {\n        return _.includes(this.roles, role);\n    }\n\n    valueOf() {\n        return \"Score: \" + this.score + \" for role: \" + this.roles.join(\", \");\n    }\n\n    add_role(role: Role) {\n        this.roles.push(role);\n    }\n}\n\nclass ScheduleInput {\n    start_date: Date;\n    end_date: Date;\n    days_per_period: number;\n\n    roles: RolesStore;\n    people: PeopleStore;\n\n    manual_layouts: Map<Date, Role>;\n\n    constructor(people: PeopleStore = new PeopleStore(), roles: RolesStore = new RolesStore()) {\n        this.manual_layouts = new Map<Date, Role>();\n        this.days_per_period = 7;\n        this.people = people;\n        this.roles = roles;\n    }\n\n    validate() {\n        if (this.roles.roles_in_layout_order.length == 0) {\n            throw Error(\"The dates parameters don't define any roles.\");\n        }\n\n        if (this.days_per_period < 1) {\n            throw new Error(\"Period must be > 1\");\n        }\n\n        if (!this.start_date || isNaN(this.start_date.valueOf())) {\n            throw new Error(\"No start date, or start date is invalid\");\n        }\n        if (!this.end_date || isNaN(this.end_date.valueOf())) {\n            throw new Error(\"No end date, or end date is invalid\");\n        }\n\n        if (this.schedule_duration_in_days <= 0) {\n            throw new Error(\"The dates has no sensible length (0 or -ve)\");\n        }\n    }\n\n    get schedule_duration_in_days(): number {\n        return daysBetween(this.start_date, this.end_date);\n    }\n\n}\n\nfunction daysBetween(startDate: Date, endDate: Date): number {\n    let msPerDay = 1000 * 60 * 60 * 24;\n    return (endDate.valueOf() - startDate.valueOf()) / msPerDay;\n}\n\nclass Exclusion {\n    start_date: Date;\n    end_date: Date;\n    role: Role;\n\n    constructor(start: Date, end: Date, because: Role) {\n        this.start_date = start;\n        this.end_date = end;\n        this.role = because;\n        if (this.duration_in_days < 0) {\n            throw Error(\"Cannot have an exclusion zone with a -ve duration\");\n        }\n    }\n\n    overlap_with(other: Exclusion) {\n        return this.includes_date(other.start_date) ||\n            this.includes_date(other.end_date) ||\n            other.includes_date(this.start_date) ||\n            other.includes_date(this.end_date);\n    }\n\n    includes_date(date: Date) {\n        return this.start_date <= date && date < this.end_date;\n    }\n\n    get duration_in_days(): number {\n        return daysBetween(this.start_date, this.end_date);\n    }\n\n    valueOf() {\n        if (this.duration_in_days > 1) {\n            return `${this.start_date.toDateString()} => ${this.end_date.toDateString()}`;\n        }\n        return `${this.start_date.toDateString()}`;\n    }\n}\n\nclass ScheduleEntry {\n    person?: Person;\n}\n\n/*\n A line in the schedule, for a given date.\n People are in various roles on a date.\n */\nclass ScheduleAtDate {\n    date: Date;\n    people_score: Map<Person, ScheduleScore>;\n\n    constructor(date: Date) {\n        this.date = date;\n        this.people_score = new Map<Person, ScheduleScore>();\n    }\n\n    get date_key(): string {\n        return dayAndHourForDate(this.date);\n    }\n\n    get people(): Array<Person> {\n        return Array.from(this.people_score.keys());\n    }\n\n    get people_sorted_by_role_priority(): Array<Person> {\n        let people = this.people;\n        return people.sort((a: Person, b: Person) => {\n            if (a.highest_role_layout_priority > b.highest_role_layout_priority) {\n                return 1;\n            } else if (a.highest_role_layout_priority < b.highest_role_layout_priority) {\n                return -1;\n            }\n            return 0;\n        });\n    }\n\n    score_for(p: Person): ScheduleScore {\n        return this.people_score.get(p);\n    }\n\n    add_person(person: Person, role: Role) {\n        if (!this.people_score.get(person)) {\n            this.people_score.set(person, new ScheduleScore(role));\n        } else {\n            let score = this.people_score.get(person);\n            score.add_role(role);\n        }\n    }\n\n    people_in_role(role: Role): Array<Person> {\n        // Return all people that have some score that records this role\n        return this.people.filter(p => {\n            let score = this.people_score.get(p);\n            return score.has_role(role);\n        });\n    }\n\n    number_of_people_in_role(role: Role): number {\n        return this.people_in_role(role).length;\n    }\n\n    roles_of_person(person: Person): Array<Role> {\n        let persons_score = this.people_score.get(person);\n        if (!persons_score) {\n            return [];\n        }\n        return persons_score.roles;\n    }\n\n    valueOf() {\n        let names_with_tasks = this.people_sorted_by_role_priority.map(p => {\n            return p.name + \"=\" + this.people_score.get(p);\n        });\n        return this.date.toDateString() + \" - \" + _.join(names_with_tasks, ',');\n    }\n\n    set_decisions(person: Person, role: Role, decisions: Array<string>) {\n        if (!this.people_score.has(person)) {\n            throw Error(\"Cant set facts, no person\");\n        }\n        let person_score = this.people_score.get(person);\n        person_score.decisions = decisions;\n    }\n\n    includes_person(person: Person) {\n        return this.people_score.has(person);\n    }\n\n    move_person(owner: Person, to_date: ScheduleAtDate, reason: string = null) {\n        // Find the roles this person was doing\n        let roles = this.roles_of_person(owner);\n        if (roles.length) {\n            let score = this.people_score.get(owner);\n            if (score) {\n                this.people_score.delete(owner);\n                roles.forEach(r => {\n                    to_date.add_person(owner, r);\n                });\n                let new_score = to_date.score_for(owner);\n                new_score.decisions = new_score.decisions.concat(score.decisions);\n                if (reason) {\n                    new_score.decisions.push(reason)\n                }\n            }\n        }\n    }\n\n    can_place_person_in_role(person: Person, role: Role) {\n        return this.number_of_people_in_role(role) < role.maximum_count;\n    }\n}\n\n\nexport {\n    Exclusion,\n    ScheduleInput,\n    ScheduleScore,\n    ScheduleAtDate,\n    daysBetween\n}\n\n\n// WEBPACK FOOTER //\n// ./src/scheduling/common.ts","import {action, observable} from \"mobx\";\nimport ShortUniqueId from 'short-unique-id';\nimport * as _ from 'lodash';\n\nclass ObjectWithUUID {\n    @observable uuid: string;\n    is_new: boolean;\n\n    constructor(uuid: string = null) {\n        if (uuid == null) {\n            let uuid_gen = new ShortUniqueId();\n            uuid = uuid_gen.randomUUID(8);\n            this.is_new = true;\n        }\n        this.uuid = uuid;\n    }\n\n    update_from_server(state) {\n        // migrate properties to this\n        this.uuid = state['id'];\n        this.is_new = false;\n    }\n}\n\nclass BaseStore<T extends ObjectWithUUID> {\n    @observable protected items: Array<T>;\n\n    constructor() {\n        this.items = [];\n    }\n\n    @action\n    protected add_object_to_array(instance: T): T {\n        if (_.findIndex(this.items, o => o.uuid == instance.uuid) >= 0) {\n            return null;\n        }\n        this.items.push(instance);\n        return instance;\n    }\n\n    @action\n    protected add_objects_to_array(many_items: T[]) {\n        many_items.forEach(i => this.add_object_to_array(i));\n    }\n\n    @action\n    protected remove_object_from_array(instance: T) {\n        this.items = this.items.filter(o => o.uuid != instance.uuid);\n    }\n\n    @action\n    protected clear_all_objects_from_array() {\n        this.items = []\n    }\n\n    findIndexOfObject(obj: T): number {\n        return _.findIndex(this.items, o => obj.uuid == o.uuid);\n    }\n\n    findIndex(predicate, fromIndex = 0) {\n        return _.findIndex(this.items, predicate, fromIndex);\n    }\n}\n\nexport {\n    ObjectWithUUID,\n    BaseStore\n}\n\n\n// WEBPACK FOOTER //\n// ./src/scheduling/common/base_model.ts","import {ScheduleAtDate, ScheduleInput} from \"../common\";\nimport {Role} from \"../tests/roles\";\nimport {Person} from \"../people\";\nimport * as _ from 'lodash';\nimport {Logger} from \"ionic-logging-service\";\nimport {dayAndHourForDate} from \"../common/date-utils\";\nimport {RuleFacts} from \"./rule-facts\";\nimport {LoggingWrapper} from \"../../common/logging-wrapper\";\n\nclass ScheduleWithRules {\n    params: ScheduleInput;\n    facts: RuleFacts;\n    free_text: {};\n\n    private logger: Logger;\n    private previous_scheduler: ScheduleWithRules;\n\n    constructor(input: ScheduleInput, previous: ScheduleWithRules = null) {\n        this.logger = LoggingWrapper.getLogger(\"scheduler\");\n\n        this.params = input;\n        this.params.validate();\n        this.free_text = {};\n        if (previous) {\n            this.warmup_using(previous);\n        }\n        this.clear_working_state();\n    }\n\n    get dates(): Array<ScheduleAtDate> {\n        return this.facts.schedule_dates;\n    }\n\n    create_schedule() {\n        let schedule_duration = this.params.schedule_duration_in_days;\n        this.logger.info(\"Working from \" + this.params.start_date + \" to: \" + this.params.end_date);\n        this.logger.debug(\"Schedule is \" + schedule_duration + \" days long\");\n\n        let role_store = this.params.roles;\n        let role_groups = role_store.roles_in_layout_order_grouped;\n        let role_names = role_groups.map(g => JSON.stringify(g.map(r => r.name)));\n        this.logger.debug(\"Roles (in order of importance): \" + JSON.stringify(role_names));\n\n        this.facts.begin();\n\n        role_groups.forEach(rg => this.process_role_group(rg));\n\n        this.process_secondary_actions();\n    }\n\n    process_role_group(role_group: Array<Role>) {\n        this.facts.begin_new_role_group(role_group);\n\n        let current_date = this.params.start_date;\n        this.logger.debug(\"\\r\\nNext group: \" + JSON.stringify(role_group.map(r => r.name)));\n\n        // Iterate through all dates\n        let iterations = 0;\n\n        while (current_date.valueOf() <= this.params.end_date.valueOf()) {\n            this.logger.debug(\"Next date: \" + current_date);\n\n            for (let role of role_group) {\n                this.facts.begin_new_role(current_date);\n                // Put everyone who wants to be doing something specifically on a certain date in place first\n                this.process_role(current_date, role, role_group);\n            }\n\n            // Move to the next date\n            current_date = this.choose_next_schedule_date(current_date);\n\n            // This is taking 10,000 reasons too far!\n            iterations++;\n            if (iterations > 10000) {\n                this.logger.error(\"Max iterations - bug!?\");\n                break\n            }\n\n        }\n    }\n\n    layout_specific_roles(current_date: Date, role: Role): Array<Person> {\n        // Check if anyone has specifics for this date\n        let placed_people = new Array<Person>();\n        this.params.people.people.forEach(person => {\n            // Find out if they want to do something specifically on this day\n            let specificRolesForDate = person.specific_roles_for_date(current_date);\n            if (specificRolesForDate) {\n                let applicable_roles = specificRolesForDate.filter(r => r.uuid == role.uuid);\n                if (applicable_roles) {\n                    applicable_roles.forEach(role => {\n                        this.facts.place_person_in_role(person, role, current_date, true, true, \"because they want to be on specifically\");\n                        placed_people.push(person);\n                    });\n                }\n            }\n        });\n        return placed_people;\n    }\n\n    is_role_filled_for_date(role: Role, date: Date) {\n        if (!this.facts) {\n            return false;\n        }\n        let specific_day = this.facts.get_schedule_for_date(date);\n        let peopleInRole = specific_day.people_in_role(role);\n        return peopleInRole.length >= role.maximum_count;\n    }\n\n    process_role(current_date: Date, role: Role, role_group: Array<Role>) {\n        if (!this.facts) {\n            throw new Error(\"No facts defined. Cannot process role\");\n        }\n        let specific_day = this.facts.get_schedule_for_date(current_date);\n\n        // If already at max for this role, ignore it.\n        if (this.is_role_filled_for_date(role, current_date)) {\n            this.logger.debug(\"Not processing \" + role.name + \", already have \" + role.maximum_count + \" slotted in\");\n            return;\n        }\n\n        // For this date, try to layout all people\n        let people_for_this_role = this.params.people.people_with_role(role);\n\n        // Setup our available people (which at the beginning, is 'everyone')\n        if (people_for_this_role.length == 0) {\n            // this.logger.debug(\"Laying out role: \" + role.name + \" ... skipping (no one to do it)\");\n            return;\n        }\n\n        let iteration_max = people_for_this_role.length;\n        let person_placed_into_role = null;\n\n        this.facts.add_decision(\"Role: \" + role.name, false);\n        let specifically_placed_people = this.layout_specific_roles(current_date, role);\n\n        while (iteration_max > 0 && specific_day.number_of_people_in_role(role) < role.maximum_count) {\n            iteration_max--;\n\n            let next_suitable_person = this.facts.get_next_suitable_person_for(role);\n            if (next_suitable_person == null) {\n                this.facts.add_decision(\"No people available for role \" + role.name);\n                break;\n            }\n\n            let message = \"Can \" + next_suitable_person.name + \" do role \" + role.name + \"?\";\n            this.facts.add_decision(message);\n\n            if (_.includes(specific_day.people_in_role(role), next_suitable_person)) {\n                let message = \"Skipping \" + next_suitable_person.name + \", they are already on it\";\n                // TODO: Fix? this is a hack to make sure we don't infinite loop. If we get here, looping would bring us right back unless we change engine state\n                this.facts.use_this_person_in_role(next_suitable_person, role);\n                this.facts.add_decision(message);\n                continue;\n            }\n\n            let next_wanted_role_for_person = this.facts.get_next_suitable_role_for_person(next_suitable_person);\n\n            // Only let this happen if the role is within the current group being processed\n            // TODO: This could be optional (might not want role_groups being mutually exclusive like this)\n            if (_.includes(role_group, next_wanted_role_for_person) && !this.is_role_filled_for_date(next_wanted_role_for_person, current_date)) {\n                if (next_wanted_role_for_person.uuid != role.uuid) {\n\n                    let other_decision = \"Putting \" + next_suitable_person.name + \" into \" + next_wanted_role_for_person + \" instead of \" + role + \" due to a role weighting\";\n\n                    if (this.facts.place_person_in_role(next_suitable_person, next_wanted_role_for_person, current_date, true, true, other_decision)) {\n                        // now continue with the loop, because we still havn't found someone for the role we were originally looking for.\n                        this.facts.add_decision(\"Check role \" + role + \" again because of weighted placement\");\n                        continue;\n                    }\n                }\n            }\n\n            // OK. So. Turns out the role is the same.\n            // Place the person, and we're done filling this role.\n            let did_place = this.facts.place_person_in_role(next_suitable_person, role, current_date);\n            if (did_place) {\n                person_placed_into_role = next_suitable_person;\n            }\n\n            let numberOfPeopleInRole = specific_day.number_of_people_in_role(role);\n            if (numberOfPeopleInRole >= role.maximum_count) {\n                this.facts.add_decision(\"Done with role.\");\n            }\n\n            if (person_placed_into_role) {\n                this.facts.set_decisions_for(person_placed_into_role, role, current_date);\n                person_placed_into_role = null;\n            }\n        }\n\n        if (specifically_placed_people.length) {\n            specifically_placed_people.forEach(p => {\n                this.facts.set_decisions_for(p, role, current_date, false);\n            });\n            this.facts.clear_decisions();\n        }\n    }\n\n    private choose_next_schedule_date(date: Date): Date {\n        let next_date = new Date(date);\n        // this.logger.debug(\"Moving from date ... : \" + next_date);\n        next_date.setDate(date.getDate() + this.params.days_per_period);\n        // this.logger.debug(\".... to date ... : \" + next_date);\n        return next_date;\n    }\n\n    private clear_working_state() {\n        this.facts = new RuleFacts(this.params.people, this.params.roles);\n        if (this.previous_scheduler) {\n            this.facts.copyUsageDataFrom(this.previous_scheduler.facts);\n            this.logger.info(\"Taking usage data from previous schedule...\");\n        }\n    }\n\n    jsonResult(minimized: boolean = false) {\n        // An array of dictionaries\n        // Each dict is ordered keys, being in order of the role\n\n        // These 'people' end up being our roles.\n        // Thing is, we want to know ALL people, in order...\n        // So I think - lets do this for ALL roles first\n        let ordered_roles = this.params.roles.roles_in_layout_order;\n        let dates = this.facts.schedule_dates;\n\n        let rows = [];\n        for (let schedule_for_day of dates) {\n            // We create a dict, in order, for EVERY key of ordered_roles\n            let rowDict = {};\n\n            rowDict['date'] = schedule_for_day.date;\n            rowDict['date_key'] = schedule_for_day.date_key;\n\n            // Look at each known role. Fill in the people fulfilling that role\n            for (let role of ordered_roles) {\n                // Do we have a value, for this?\n                let free_text = this.notes_for_date(schedule_for_day.date, role);\n                let value_for_cell = schedule_for_day.people_in_role(role);\n                rowDict[role.name] = [...free_text, ...value_for_cell];\n            }\n\n            // Add the row\n            rows.push(rowDict);\n        }\n        return rows;\n    }\n\n    jsonFields() {\n        let ordered_roles = this.params.roles.roles_in_layout_order;\n        let field_names = ordered_roles.map(r => {\n            return r.name;\n        });\n        return [\n            \"Date\",\n            ...field_names\n        ]\n    }\n\n    reasons_for(person: Person, date: Date, role: Role): Array<string> {\n        let specific_day = this.facts.get_schedule_for_date(date);\n        let score = specific_day.score_for(person);\n        if (score) {\n            return score.decisions;\n        }\n        return [];\n    }\n\n    is_person_in_exclusion_zone(person: Person, role: Role, date_for_row: Date) {\n        return this.facts.is_person_in_exclusion_zone(person, role, date_for_row);\n    }\n\n    add_note(date: Date, role: Role, note: string) {\n        let role_map = this.get_role_map_for(date, role);\n        role_map.push(note);\n    }\n\n    notes_for_date(date: Date, role: Role): string[] {\n        return this.get_role_map_for(date, role);\n    }\n\n    private get_role_map_for(date: Date, role: Role): string[] {\n        if (!this.free_text) {\n            this.free_text = {};\n        }\n\n        let date_key = dayAndHourForDate(date);\n        if (!this.free_text[date_key]) {\n            this.free_text[date_key] = {};\n        }\n\n        let role_map = this.free_text[date_key];\n        if (!role_map[role.uuid]) {\n            role_map[role.uuid] = [];\n        }\n        return role_map[role.uuid];\n    }\n\n    warmup_using(previous_schedule: ScheduleWithRules) {\n        this.previous_scheduler = previous_schedule;\n        this.logger.info(\"Warming up using a previous schedule...\");\n    }\n\n    private process_secondary_actions() {\n        // Check everyone that has secondary actions\n        this.params.people.people.forEach(person => {\n            let secondary_actions = person.secondary_actions;\n            secondary_actions.forEach(secondary_action => {\n                /*\n                Iterate all dates in the schedule. Does the action want to do anything?\n                 */\n                for (let schedule_on_date of this.dates) {\n                    secondary_action.execute(schedule_on_date, this);\n                }\n            });\n        });\n    }\n\n    closest_schedule_date(date: Date, distance_predicate: (sd) => number | boolean): ScheduleAtDate {\n        let min_distance: number = 32767;\n        let chosen_sd = null;\n        this.dates.forEach(sd => {\n            let this_distance = distance_predicate(sd);\n            if (typeof this_distance === 'boolean') {\n                if (!this_distance) {\n                    return;\n                }\n            }\n            if (typeof this_distance === 'number') {\n                if (this_distance < min_distance) {\n                    min_distance = this_distance;\n                    chosen_sd = sd;\n                }\n            }\n        });\n        return chosen_sd;\n    }\n}\n\nexport {\n    ScheduleWithRules\n}\n\n\n// WEBPACK FOOTER //\n// ./src/scheduling/rule_based/scheduler.ts","///<reference path=\"./fix.broken.gapi.types.d.ts\"/>\n///<reference path=\"../../node_modules/@types/gapi.client.sheets/index.d.ts\"/>\nimport {ApplicationRef, Injectable} from \"@angular/core\";\nimport {credentials, DISCOVERY_DOCS, SCOPES} from \"./auth-common\";\nimport {Observable} from \"rxjs/Observable\";\nimport {ScheduleWithRules} from \"../scheduling/rule_based/scheduler\";\nimport {Subject} from \"rxjs/Subject\";\nimport {fromPromise} from \"rxjs/observable/fromPromise\"\n\nimport * as _ from 'lodash';\n\nimport {Logger, LoggingService} from \"ionic-logging-service\";\nimport {formatDateForGoogleSpreadsheet} from \"../scheduling/common/date-utils\";\nimport {LoggingWrapper} from \"./logging-wrapper\";\nimport {ServerProvider} from \"../providers/server/server\";\n\nimport Spreadsheet = gapi.client.sheets.Spreadsheet;\nimport Sheet = gapi.client.sheets.Sheet;\nimport ValueRange = gapi.client.sheets.ValueRange;\nimport {RootStore} from \"../store/root\";\nimport {SavedState, UIStore} from \"../store/UIState\";\n\nconst API_KEY = \"AIzaSyCVhzG0pEB1NfZsxpdPPon3XhEK4pctEYE\";\n\n\n@Injectable()\nclass GAPIS {\n    private init_done: boolean;\n    private callback: any;\n\n    private logger: Logger;\n\n    constructor(private rootStore: RootStore,\n                private loggingService: LoggingService,\n                private server: ServerProvider,\n                private appRef: ApplicationRef) {\n        this.logger = LoggingWrapper.getLogger(\"google\");\n    }\n\n    init(callback = null) {\n        this.logger.info(\"Loading GAPI...\");\n        this.callback = callback;\n\n        this.initClient = this.initClient.bind(this);\n        this.loadDrive = this.loadDrive.bind(this);\n        this.updateSigninStatus = this.updateSigninStatus.bind(this);\n\n        this.loadAuthentication();\n    }\n\n    authenticate() {\n        if (!this.init_done) {\n            this.init(this.authenticate);\n            return;\n        }\n        // gapi.auth2.getAuthInstance().signIn();\n        gapi.auth2.getAuthInstance().grantOfflineAccess().then(this.offlineAccess.bind(this));\n\n    }\n\n    offlineAccess(json) {\n        const {code} = json;\n        this.server.storeGoogleAccessCode(code).subscribe(r => {\n            if (!r.ok) {\n                this.logger.error(r.reason)\n            } else {\n                this.logger.info(\"Server stored and converted the one-time code to a token!\");\n            }\n        })\n    }\n\n    signout() {\n        if (!this.init_done) {\n            this.init(this.signout);\n            return;\n        }\n        gapi.auth2.getAuthInstance().signOut();\n    }\n\n    list_all_sheets(): Observable<any> {\n        this.logger.info(\"Listing all sheets\");\n        let sheets_only = {\n            q: \"mimeType='application/vnd.google-apps.spreadsheet'\"\n        };\n        return Observable.create((observable) => {\n            gapi.client.drive.files.list(sheets_only).then((response) => {\n                let files = response.result.files;\n                // for(let file of files) {\n                // this.logger.info(\"got: \" + JSON.stringify(file));\n                observable.next(files);\n                // }\n                observable.complete();\n            });\n        });\n    }\n\n    private initClient() {\n        this.logger.info(\"Initializing GAPI...\");\n        gapi.client.init({\n            apiKey: API_KEY,\n            clientId: credentials.installed.client_id,\n            discoveryDocs: DISCOVERY_DOCS,\n            scope: SCOPES.join(\" \")\n        }).then(() => {\n            // Listen for sign-in state changes.\n            gapi.auth2.getAuthInstance().isSignedIn.listen(this.updateSigninStatus);\n\n            // Handle the initial sign-in state.\n            this.updateSigninStatus(gapi.auth2.getAuthInstance().isSignedIn.get());\n\n            this.init_done = true;\n            if (this.callback) {\n                this.callback();\n                this.callback = null;\n            }\n        });\n    }\n\n    private updateSigninStatus(isSignedIn: boolean) {\n        this.logger.info(\"Updating signed in state to: \" + isSignedIn);\n        let store = this.ui_store;\n        store.signed_in_to_google = isSignedIn;\n        this.appRef.tick();\n    }\n\n    private loadAuthentication() {\n        this.logger.info(\"Loading Auth API...\");\n        gapi.load('client:auth2', this.loadDrive);\n    }\n\n    private loadDrive() {\n        this.logger.info(\"Loading drive API...\");\n        gapi.client.load('drive', 'v3').then((v) => {\n            this.loadSheets();\n        });\n    }\n\n    private loadSheets() {\n        this.logger.info(\"Loading sheets API...\");\n        gapi.client.load('sheets', 'v4').then((v) => {\n            this.initClient();\n        });\n    }\n\n    get state(): SavedState {\n        return this.rootStore.state;\n    }\n\n    get ui_store(): UIStore {\n        return this.rootStore.ui_store;\n    }\n\n    public load_sheet_with_id(sheet_id): Observable<Spreadsheet> {\n        return Observable.create((observer) => {\n            this.logger.info(\"Loading spreadsheet with ID: \" + sheet_id);\n            if (sheet_id == null || sheet_id == \"\") {\n                // throw new Error(\"No sheet\");\n                throw new Error(\"No sheet ID specified\");\n            }\n            // Try to read this sheet to see if we can\n            let request = {spreadsheetId: sheet_id, includeGridData: true};\n            gapi.client.sheets.spreadsheets.get(request).then((result) => {\n                // this.logger.info(\"Hey! We got the sheet! Awesome!\");\n                observer.next(result.result);\n                observer.complete();\n            });\n        });\n    }\n\n    range_for_sheet(s: Sheet, range?: string): string {\n        if (!range) {\n            return \"'\" + s.properties.title + \"'\";\n        }\n        return \"'\" + s.properties.title + \"'!\" + range;\n    }\n\n    read_spreadsheet_data(spreadsheet: Spreadsheet, sheet: Sheet): Observable<Array<any>> {\n        let promise = gapi.client.sheets.spreadsheets.values.get({\n            spreadsheetId: spreadsheet.spreadsheetId,\n            range: this.range_for_sheet(sheet),\n            includeGridData: true\n        });\n\n        return fromPromise(promise).map(v => {\n            let result = v['result'];\n            return result['values'];\n        });\n    }\n\n    clear_and_write_schedule(spreadsheet: Spreadsheet, sheet: Sheet, schedule: ScheduleWithRules): Observable<number> {\n        // Righteo. Lets do a batch update!\n        let progressObservable = new Subject<number>();\n        progressObservable.next(0);\n        let num_format_rules = sheet.conditionalFormats ? sheet.conditionalFormats.length : 0;\n        this.logger.info(\"Clearing sheet (with \" + num_format_rules + \" format rules)...\");\n\n        gapi.client.sheets.spreadsheets.values.clear({\n            spreadsheetId: spreadsheet.spreadsheetId,\n            range: this.range_for_sheet(sheet)\n        }).then((clear_response) => {\n            progressObservable.next(0.25);\n            this.logger.info(\"Sending new data...\");\n            let fields = schedule.jsonFields();\n            let rows = schedule.jsonResult().map(row => {\n                // Want to remap this structure\n                let new_row = [formatDateForGoogleSpreadsheet(row.date)];\n                for (let field of fields) {\n                    if (field == 'Date') continue;\n                    let all_names = _.map(row[field], p => p.name);\n                    new_row.push(_.join(all_names, \", \"));\n                }\n                return new_row;\n            });\n\n            let data: ValueRange[] = [\n                {\n                    range: this.range_for_sheet(sheet, \"1:1\"),\n                    values: [fields]\n                }\n            ];\n\n            let row_index = 2;\n            for (let r of rows) {\n                data.push({\n                    range: this.range_for_sheet(sheet, \"\" + row_index + \":\" + row_index),\n                    values: [r]\n                });\n                row_index++;\n            }\n\n            let searchRow = rows.length + 5;\n            let searchCondition = \"=and(search($B$\" + searchRow + \",B2), len($B$\" + searchRow + \")>0)\";\n\n            // Add in the Search Titles\n            data.push({\n                range: this.range_for_sheet(sheet, \"B\" + (searchRow - 1) + \":B\" + (searchRow - 1)),\n                values: [['Super Search!']]\n            });\n            data.push({\n                range: this.range_for_sheet(sheet, \"\" + (searchRow) + \":\" + (searchRow)),\n                values: [['Enter name here:']]\n            });\n\n            progressObservable.next(0.5);\n            gapi.client.sheets.spreadsheets.values.batchUpdate({\n                spreadsheetId: spreadsheet.spreadsheetId,\n                resource: {\n                    valueInputOption: \"USER_ENTERED\",\n                    data: data\n                }\n            }).then((r) => {\n                progressObservable.next(0.66);\n                this.logger.info(\"Updated all data. Formatting...\");\n                let requests = [];\n                for (let index = num_format_rules - 1; index >= 0; index--) {\n                    requests.push({\n                            deleteConditionalFormatRule: {\n                                sheetId: sheet.properties.sheetId,\n                                index: 0\n                            },\n                        }\n                    )\n                }\n                if (requests.length > 0) {\n                    progressObservable.next(0.75);\n                    gapi.client.sheets.spreadsheets.batchUpdate({\n                        spreadsheetId: spreadsheet.spreadsheetId,\n                        requests: requests\n                    }).then(this.setConditionalFormats(spreadsheet, sheet, rows, fields, searchCondition, progressObservable));\n                } else {\n                    this.setConditionalFormats(spreadsheet, sheet, rows, fields, searchCondition, progressObservable);\n                }\n            })\n        });\n        return progressObservable;\n    }\n\n    private setConditionalFormats(spreadsheet: gapi.client.sheets.Spreadsheet, sheet: gapi.client.sheets.Sheet, rows: string[][], fields: any[], searchCondition: string, progressObservable: Subject<number>) {\n        progressObservable.next(0.85);\n        gapi.client.sheets.spreadsheets.batchUpdate({\n            spreadsheetId: spreadsheet.spreadsheetId,\n            requests: [\n                {\n                    addConditionalFormatRule: {\n                        rule: {\n                            ranges: [\n                                {\n                                    sheetId: sheet.properties.sheetId,\n                                    startRowIndex: 1,\n                                    endRowIndex: rows.length + 1\n                                }\n                            ],\n                            booleanRule: {\n                                condition: {\n                                    type: \"CUSTOM_FORMULA\",\n                                    values: [\n                                        {\n                                            userEnteredValue: \"=$A2<today()\"\n                                        }\n                                    ]\n                                },\n                                format: {\n                                    textFormat: {\n                                        foregroundColor: {\n                                            red: 0.2, green: 0.2, blue: 0.2\n                                        },\n                                    },\n                                }\n                            }\n                        },\n                        index: 0\n                    }\n                }\n            ]\n        }).then((v) => {\n            progressObservable.next(0.95);\n            gapi.client.sheets.spreadsheets.batchUpdate({\n                spreadsheetId: spreadsheet.spreadsheetId,\n                requests: [\n                    {\n                        addConditionalFormatRule: {\n                            rule: {\n                                ranges: [\n                                    {\n                                        sheetId: sheet.properties.sheetId,\n                                        startRowIndex: 1,\n                                        endRowIndex: rows.length + 1,\n                                        startColumnIndex: 1,\n                                        endColumnIndex: fields.length\n                                    }\n                                ],\n                                booleanRule: {\n                                    condition: {\n                                        type: \"CUSTOM_FORMULA\",\n                                        values: [\n                                            {\n                                                userEnteredValue: searchCondition\n                                            }\n                                        ]\n                                    },\n                                    format: {\n                                        textFormat: {\n                                            foregroundColor: {\n                                                red: 1, green: 1, blue: 1\n                                            },\n                                        },\n                                        backgroundColor: {\n                                            red: 0.5, green: 0.6, blue: 0.2\n                                        }\n                                    }\n                                }\n                            },\n                            index: 0\n                        },\n                    },\n                    {\n                        repeatCell: {\n                            range: {\n                                sheetId: sheet.properties.sheetId,\n                                startRowIndex: 0,\n                                endRowIndex: 1\n                            },\n                            cell: {\n                                userEnteredFormat: {\n                                    textFormat: {\n                                        bold: true\n                                    }\n                                }\n                            },\n                            fields: \"userEnteredFormat.textFormat.bold\"\n                        },\n                    },\n                    {\n                        autoResizeDimensions: {\n                            dimensions: {\n                                sheetId: sheet.properties.sheetId,\n                                dimension: \"COLUMNS\",\n                                startIndex: 0,\n                                endIndex: 20\n                            }\n                        }\n                    }\n                ]\n            }).then((r) => {\n                progressObservable.next(1.0);\n                this.logger.info(\"Finished updating Google Sheet\");\n                progressObservable.complete();\n            })\n        });\n    }\n}\n\n\nexport {\n    GAPIS\n}\n\n\n// WEBPACK FOOTER //\n// ./src/common/gapis-auth.ts","import {HttpClient, HttpHeaders} from '@angular/common/http';\nimport {Injectable} from '@angular/core';\nimport {ConfigurationService} from \"ionic-configuration-service\";\nimport {LoginResponse, ValidationResponse} from \"../../common/interfaces\";\nimport {Observable} from \"rxjs/Observable\";\nimport \"rxjs/add/operator/map\";\nimport {Logger, LoggingService} from \"ionic-logging-service\";\nimport {RootStore} from \"../../store/root\";\n\n@Injectable()\nexport class ServerProvider {\n    logger: Logger;\n\n    constructor(public http: HttpClient,\n                public store: RootStore,\n                public loggingService: LoggingService,\n                public config: ConfigurationService) {\n        this.logger = this.loggingService.getLogger(\"server\")\n    }\n\n    private server_url(path): string {\n        let server = this.config.getValue(\"server\");\n        return `${server['url']}/api/${path}`;\n    }\n\n    isUsernameAvailableAndGood(username: string): Observable<string> {\n        let url = this.server_url(\"validate_login/\" + `?email=${username}`);\n        return this.http.get(url).map(r => {\n            if ('in_use' in r) {\n                return r['in_use'] == false ? \"good\" : \"bad\"\n            }\n            return \"bad\";\n        });\n    }\n\n\n    loginUser(username: string, password: string): Observable<ValidationResponse> {\n        let url = this.server_url(\"login/\" + `?email=${username}&password=${password}`);\n        return this.http.get(url).map(r => {\n            let res = Object.assign(new LoginResponse(), r);\n            if (res.ok) {\n                if (res['token'])\n                    this.store.ui_store.saved_state.login_token = res['token'];\n            }\n            return res;\n        });\n    }\n\n    validateLoginToken(): Observable<ValidationResponse> {\n        let token = this.store.ui_store.saved_state.login_token;\n        console.log(`Validating login token: ${JSON.stringify(token)}`);\n        let url = this.server_url(\"validate_token/?token=\" + token);\n        return this.http.get(url).map(r => {\n            let vr: ValidationResponse = {\n                ok: r['ok'],\n                reason: r['reason'],\n                user: r['user']\n            };\n            this.store.ui_store.login_token_validated = vr.ok;\n            return vr;\n        })\n    }\n\n    // // I wonder, can the client use the servers google token to talk to it?\n    // // Unlikely?\n    // get_sheets() {\n    //     this.logger.info(\"Listing all sheets\");\n    //     let sheets_only = {\n    //         q: \"mimeType='application/vnd.google-apps.spreadsheet'\"\n    //     };\n    //     return Observable.create((observable) => {\n    //         let url = this.server_url(\"/sheets/\");\n    //         gapi.client.drive.files.list(sheets_only).then((response) => {\n    //             let files = response.result.files;\n    //             // for(let file of files) {\n    //             // this.logger.info(\"got: \" + JSON.stringify(file));\n    //             observable.next(files);\n    //             // }\n    //             observable.complete();\n    //         });\n    //     });\n    //\n    // }\n\n    get headers() {\n        if (this.store) {\n            if (this.store.ui_store.signed_in) {\n                let token = this.store.ui_store.saved_state.login_token;\n                return new HttpHeaders({'Authorization': `Token ${token}`});\n            }\n        }\n        return null;\n    }\n\n    get options() {\n        let options = {};\n        let headers = this.headers;\n        if (headers) {\n            options['headers'] = headers;\n        }\n        return options;\n    }\n\n    storeGoogleAccessCode(code: string): Observable<ValidationResponse> {\n        let url = this.server_url(\"token/\");\n        this.logger.info(`Sending access token`);\n        return this.http.post(url, {code: code}, this.options).map(r => {\n            // If we get back a JSON with 'ok'. Otherwise expect 'detail' to contain the error.\n            if (r.hasOwnProperty('ok') && r['ok']) {\n                return new LoginResponse(true);\n            }\n            this.logger.info(`Token store returned: ${JSON.stringify(r)}`);\n            return new LoginResponse(false, r['detail']);\n        })\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/providers/server/server.ts"],"sourceRoot":""}